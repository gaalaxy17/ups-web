{"version":3,"sources":["webpack:///src/app/app.component.html","webpack:///src/app/atendimento-tv/atendimento-tv.component.html","webpack:///src/app/atendimento/atendimento-consulta/atendimento-consulta.component.html","webpack:///src/app/atendimento/atendimento-detalhe/atendimento-detalhe.component.html","webpack:///src/app/chamado/chamado-consulta/chamado-consulta.component.html","webpack:///src/app/chamado/chamado-detalhe/chamado-detalhe.component.html","webpack:///src/app/cliente/cliente-consulta/cliente-consulta.component.html","webpack:///src/app/cliente/cliente-detalhe/cliente-detalhe.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/layouts/admin-layout/admin-layout.component.html","webpack:///src/app/lbd/lbd-chart/lbd-chart.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/atendimento-tv/atendimento-tv.component.css","webpack:///src/app/atendimento-tv/atendimento-tv.component.ts","webpack:///src/app/atendimento/atendimento-consulta/atendimento-consulta.component.css","webpack:///src/app/atendimento/atendimento-consulta/atendimento-consulta.component.ts","webpack:///src/app/atendimento/atendimento-detalhe/atendimento-detalhe.component.css","webpack:///src/app/atendimento/atendimento-detalhe/atendimento-detalhe.component.ts","webpack:///src/app/chamado/chamado-consulta/chamado-consulta.component.css","webpack:///src/app/chamado/chamado-consulta/chamado-consulta.component.ts","webpack:///src/app/chamado/chamado-detalhe/chamado-detalhe.component.css","webpack:///src/app/chamado/chamado-detalhe/chamado-detalhe.component.ts","webpack:///src/app/cliente/cliente-consulta/cliente-consulta.component.css","webpack:///src/app/cliente/cliente-consulta/cliente-consulta.component.ts","webpack:///src/app/cliente/cliente-detalhe/cliente-detalhe.component.css","webpack:///src/app/cliente/cliente-detalhe/cliente-detalhe.component.ts","webpack:///src/app/commons/auth.guard.ts","webpack:///src/app/commons/auth.interceptor.ts","webpack:///src/app/commons/commons.module.ts","webpack:///src/app/commons/enum/tipoAtendimento.ts","webpack:///src/app/home/home.component.css","webpack:///src/app/home/home.component.ts","webpack:///src/app/layouts/admin-layout/admin-layout.component.scss","webpack:///src/app/layouts/admin-layout/admin-layout.component.ts","webpack:///src/app/layouts/admin-layout/admin-layout.module.ts","webpack:///src/app/layouts/admin-layout/admin-layout.routing.ts","webpack:///src/app/lbd/lbd-chart/lbd-chart.component.ts","webpack:///src/app/lbd/lbd.module.ts","webpack:///src/app/login/login.component.css","webpack:///src/app/login/login.component.ts","webpack:///src/app/services/atendimento.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/chamado.service.ts","webpack:///src/app/services/cliente.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.module.ts","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.module.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","t","keys","webpackAsyncContextKeys","Object","module","exports","AppComponent","location","path","titlee","prepareExternalUrl","slice","Location","Component","selector","template","registerLocaleData","AppModule","NgModule","imports","CommonsModule","BrowserAnimationsModule","RouterModule","AppRoutingModule","FormsModule","AdminLayoutModule","HttpClientModule","NavbarModule","FooterModule","SidebarModule","ReactiveFormsModule","NotifierModule","withConfig","position","horizontal","vertical","theme","NgbModule","declarations","LoginComponent","AdminLayoutComponent","AtendimentoTvComponent","providers","provide","HTTP_INTERCEPTORS","useClass","AuthInterceptor","multi","LOCALE_ID","useValue","bootstrap","routes","pathMatch","component","children","loadChildren","redirectTo","CommonModule","BrowserModule","forRoot","useHash","atendimentoService","router","atendimentos","carregarDados","updateSubscription","interval","subscribe","val","unsubscribe","navigateByUrl","getAtendimentos","results","console","log","AtendimentoService","Router","AtendimentoConsultaComponent","chamadoService","notifierService","page","pageSize","filtro","cdAtendimento","nmEmpresa","cdTipoAtendimento","dsTipoEquipamento","dtFiltroDe","dtFiltroAte","cdLoginTecnico","dtFiltroAtendimentoDe","dtFiltroAtendimentoAte","stStatus","empresas","unidades","tiposAtendimento","tecnicos","tiposEquipamento","notifier","carregarCombos","buscar","combos","length","forEach","item","i","fgChecked","success","confirmar","notify","data","filename","csvData","convertToCSV","blob","Blob","type","dwldLink","document","createElement","url","URL","createObjectURL","isSafariBrowser","navigator","userAgent","indexOf","setAttribute","style","visibility","body","appendChild","click","removeChild","objArray","headerList","array","JSON","parse","str","row","index","line","head","ChamadoService","NotifierService","AtendimentoDetalheComponent","route","clienteService","cdCliente","chamadoFormSubmitted","cdEmpresa","form","cdUnidade","equipamentos","equipamento","dsEquipamento","dsTipo","fgAtivo","tecnico","queryParams","params","parseInt","carregarUnidades","detalhar","reject","fail","push","hasFound","cdLogin","TipoAtendimento","PREVENTIVA","PREVENTIVA_E_CORRETIVA","carregarEquipamentos","equip","splice","dsDescricao","dtAtendimento","hrAtendimento","salvar","chamado","ActivatedRoute","ClienteService","ChamadoConsultaComponent","chamados","ChamadoDetalheComponent","ClienteConsultaComponent","clientes","nrDocumento","ClienteDetalheComponent","modalService","empresaFormSubmitted","nrInscricaoEstadual","nrCep","nmRua","nrNumero","dsComplemento","nmBairro","nmEstado","nmCidade","nmUnidade","nmContatoCli","nrTelefone","nrCelular","fgClienteContrato","nrDuracaoContrato","dtInicioContrato","nrDiaPrevisto","tecnicoPrevisto","closeResult","carregarEndereco","erro","logradouro","bairro","uf","localidade","uuid","v4","foundItem","$","modal","u","empresa","unidade","mudarStatusUnidade","gerarAtendimentosContrato","NgbModal","AuthGuard","auth","state","getUser","user","navigate","returnUrl","AuthService","Injectable","providedIn","authService","next","getUserAsObservable","pipe","mergeMap","dsToken","split","environment","API_ENDPOINT","clone","setHeaders","Authorization","handle","catchError","error","errorMessage","ErrorEvent","message","status","throwError","HomeComponent","yScrollStack","isWindows","platform","getElementsByTagName","classList","add","remove","elemMainPanel","querySelector","elemSidebar","ev","lastPoppedUrl","events","event","NavigationStart","window","scrollY","NavigationEnd","undefined","scrollTo","pop","_router","filter","scrollTop","matchMedia","matches","isMac","ps","runOnRouteChange","update","bool","toUpperCase","MAT_DATE_LOCALE","forChild","AdminLayoutRoutes","LbdModule","NguiMapModule","apiUrl","MatDatepickerModule","MatNativeDateModule","MatFormFieldModule","MatInputModule","NgxMaskModule","NgxSpinnerModule","MatSelectModule","MatAutocompleteModule","canActivate","ChartType","LbdChartComponent","chartId","currentId","chartType","Pie","Chartist","chartData","chartOptions","chartResponsive","Line","Bar","Input","changeDetection","ChangeDetectionStrategy","OnPush","formBuilder","dsUser","dsPass","loading","submitted","login","FormBuilder","httpClient","spinner","show","post","res","hide","hasError","get","HttpClient","NgxSpinnerService","TOKEN_KEY","USER_KEY","isAuthenticated","localStorage","getItem","username","password","setItem","stringify","entries","clear","from","key","cdPerfil","cep","VIA_CEP_API_ENDPOINT","FooterComponent","test","Date","NavbarComponent","element","sidebarVisible","loadUser","listTitles","ROUTES","listTitle","navbar","nativeElement","toggleButton","getElementsByClassName","setTimeout","sidebarOpen","sidebarClose","charAt","title","ElementRef","icon","SidebarComponent","menuItems","menuItem","width","production","enableProdMode","platformBrowserDynamic","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<router-outlet></router-outlet>\\n<notifier-container></notifier-container>\\n\"","export default \"\\n<style>\\n    .btn-theme {\\n        background-color: #2f353b;\\n        color: white;\\n        border-color: #2f353b;\\n    }\\n\\n    .btn-theme:hover {\\n        background-color: #24292e;\\n        color: white;\\n        border-color: #24292e;\\n    }\\n\\n    .btn-theme:enabled {\\n        background-color: #24292e;\\n        color: white;\\n        border-color: #24292e;\\n    }\\n\\n    .atendimento_pendente_confirmacao {\\n        border-left: 15px solid grey;\\n        background-color: #1d1c1ce5\\n    }\\n\\n    .atendimento_em_aberto {\\n        border-left: 15px solid #2c2ce8;\\n        background-color: #1d1c1ce5\\n    }\\n\\n    .atendimento_iniciado {\\n        border-left: 15px solid #c5830a;\\n        background-color: #1d1c1ce5\\n    }\\n\\n    .atendimento_concluido {\\n        border-left: 15px solid #009900;\\n        background-color: #1d1c1ce5\\n    }\\n</style>\\n\\n\\n<body style=\\\"background-color: #2d2c2c; padding: 40px\\\">\\n\\n    <button (click)=\\\"voltar()\\\" class=\\\"btn btn-theme btn-fill\\\">Voltar</button>\\n    <span style=\\\"display: inline-block; margin-left: 50px;\\\">\\n\\n        <div style=\\\"background-color: grey; height: 30px; width: 30px; display: inline-block\\\"></div> <b\\n            style=\\\"color: white; margin-right: 15px;\\\"> Pendente</b>\\n        <div style=\\\"background-color: #2c2ce8; height: 30px; width: 30px; display: inline-block\\\"></div> <b\\n            style=\\\"color: white; margin-right: 15px;\\\"> Confirmado</b>\\n        <div style=\\\"background-color: #c5830a; height: 30px; width: 30px; display: inline-block\\\"></div> <b\\n            style=\\\"color: white; margin-right: 15px;\\\"> Iniciado</b>\\n        <div style=\\\"background-color: #009900; height: 30px; width: 30px; display: inline-block\\\"></div> <b\\n            style=\\\"color: white; margin-right: 15px;\\\"> Finalizado</b>\\n\\n    </span>\\n\\n    <br><br>\\n\\n    <div class=\\\"card\\\" *ngFor=\\\"let a of atendimentos\\\" [class]=\\\"{\\n        'atendimento_pendente_confirmacao':a.stStatus == 'atendimento_pendente_confirmacao',\\n        'atendimento_em_aberto':a.stStatus == 'atendimento_em_aberto',\\n        'atendimento_iniciado':a.stStatus == 'atendimento_iniciado',\\n        'atendimento_concluido':a.stStatus == 'atendimento_concluido'\\n}\\\" style=\\\"width: 350px; display: inline-block; margin-right: 25px;\\\">\\n        <div class=\\\"header\\\" style=\\\"text-align: center; color: white\\\">\\n            <!-- <b style=\\\"font-size: 25px;\\\">Nº {{a.cdAtendimento}}</b> -->\\n            <b style=\\\"font-size: 30px;\\\">{{a.hrAtendimento}}</b><br>\\n            <b style=\\\"font-size: 22px;\\\">{{a.dsTipoAtendimento}}</b>\\n        </div>\\n        <hr>\\n        <div style=\\\"color: white\\\" class=\\\"content\\\">\\n            <b>{{a.nmEmpresa}}</b> <br>\\n            <b>{{a.nmUnidade}}</b> <br>\\n            <br>\\n            <b>Técnicos:</b> <br>\\n            <span *ngFor=\\\"let t of a.tecnicos\\\">\\n                {{t}} <br>\\n            </span>\\n            <br>\\n\\n            <b>Início:</b> {{a.dtInicio | date:'HH:mm'}}\\n            <br>\\n            <b>Fim: </b> {{a.dtFim | date:'HH:mm'}}\\n            <br>\\n            <!-- <hr> -->\\n            <div style=\\\"text-align: center;\\\">\\n                <h1><b>RAT: {{a.nrRat}}</b></h1>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n</style>\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\"\\n                        style=\\\"background-color: #2f353b; color: white; padding: 15px; font-size: 20px;\\\">\\n                        <b>\\n                        </b>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div style=\\\"padding: 25px;\\\">\\n                            <table width=\\\"100%\\\">\\n                                <thead>\\n                                    <tr style=\\\"width: 100%;\\\">\\n                                        <td width=\\\"10%\\\"></td>\\n                                        <td width=\\\"70%\\\"> </td>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>ID</b></label></td>\\n                                        <td>\\n                                            <input type=\\\"number\\\" class=\\\"form-control col-6\\\"\\n                                                [(ngModel)]=\\\"filtro.cdAtendimento\\\" placeholder=\\\"Digite o ID do chamado\\\">\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Empresa</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <input type=\\\"text\\\" class=\\\"form-control col-6\\\" [(ngModel)]=\\\"filtro.nmEmpresa\\\"\\n                                                placeholder=\\\"Digite o nome da empresa\\\">\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Tipo Atendimento</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-select (selectionChange)=\\\"carregarEquipamentos()\\\"\\n                                                    name=\\\"cdTipoAtendimento\\\" [(ngModel)]=\\\"filtro.cdTipoAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let t of tiposAtendimento\\\"\\n                                                        [value]=\\\"t.cdTipoAtendimento\\\">\\n                                                        {{t.dsTipoAtendimento}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Tipo Equipamento</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-select \\n                                                    name=\\\"dsTipoEquipamento\\\" [(ngModel)]=\\\"filtro.dsTipoEquipamento\\\">\\n                                                    <mat-option *ngFor=\\\"let e of tiposEquipamento\\\"\\n                                                        [value]=\\\"e\\\">\\n                                                        {{e}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Técnico</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-select name=\\\"cdLoginTecnico\\\" [(ngModel)]=\\\"filtro.cdLoginTecnico\\\">\\n                                                    <mat-option *ngFor=\\\"let tec of tecnicos\\\" [value]=\\\"tec.cdLogin\\\">\\n                                                        {{tec.nmUser}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Status</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-select name=\\\"cdLoginTecnico\\\" [(ngModel)]=\\\"filtro.stStatus\\\">\\n                                                    <mat-option value=\\\"atendimento_pendente_confirmacao\\\"\\n                                                        [selected]=\\\"true\\\">\\n                                                        Aguardando Confirmação\\n                                                    </mat-option>\\n                                                    <mat-option value=\\\"atendimento_em_aberto\\\">\\n                                                        Confirmado\\n                                                    </mat-option>\\n                                                    <mat-option value=\\\"atendimento_iniciado\\\">\\n                                                        Iniciado\\n                                                    </mat-option>\\n                                                    <mat-option value=\\\"atendimento_concluido\\\">\\n                                                        Finalizado\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td> <label for=\\\"company\\\" class=\\\"control-label\\\"><b>Periodo Criação</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"margin-right: 20px;\\\">\\n                                                <mat-label>De</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoDe\\\" (click)=\\\"dtPeriodoDe.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroDe\\\" [matDatepicker]=\\\"dtPeriodoDe\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoDe\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoDe></mat-datepicker>\\n                                            </mat-form-field>\\n                                            <mat-form-field>\\n                                                <mat-label>Até</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoAte\\\" (click)=\\\"dtPeriodoAte.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroAte\\\" [matDatepicker]=\\\"dtPeriodoAte\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoAte\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoAte></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td> <label for=\\\"company\\\" class=\\\"control-label\\\"><b>Periodo\\n                                                    Atendimento</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"margin-right: 20px;\\\">\\n                                                <mat-label>De</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoAtendimentoDe\\\"\\n                                                    (click)=\\\"dtPeriodoAtendimentoDe.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroAtendimentoDe\\\"\\n                                                    [matDatepicker]=\\\"dtPeriodoAtendimentoDe\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoAtendimentoDe\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoAtendimentoDe></mat-datepicker>\\n                                            </mat-form-field>\\n                                            <mat-form-field>\\n                                                <mat-label>Até</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoAtendimentoAte\\\"\\n                                                    (click)=\\\"dtPeriodoAtendimentoAte.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroAtendimentoAte\\\"\\n                                                    [matDatepicker]=\\\"dtPeriodoAtendimentoAte\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoAtendimentoAte\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoAtendimentoAte></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                            <hr><br>\\n                            <div class=\\\"form-group\\\">\\n                                <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"buscar()\\\" style=\\\"margin-right: 5px\\\"><i\\n                                        class=\\\"fa fa-search\\\"></i>&nbsp;Buscar</button>\\n                                <!-- <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/chamado/detalhe']\\\"\\n                                    [queryParams]=\\\"{new: 1}\\\"><i class=\\\"fa fa-file\\\"></i>&nbsp;Novo</button> -->\\n                                <button class=\\\"btn btn-fill btn-primary\\\" (click)=\\\"confirmarSelecionados($event)\\\"\\n                                    style=\\\"margin-right: 5px;\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Confirmar\\n                                    Selecionados</button>\\n                                <button class=\\\"btn btn-fill btn-primary\\\" (click)=\\\"exportarDados()\\\"\\n                                    style=\\\"margin-right: 5px;\\\"><i class=\\\"fa fa-file\\\"></i>&nbsp;Exportar Dados</button>\\n                                <button style=\\\"margin-right: 5px;\\\" class=\\\"btn btn-fill btn-theme\\\"\\n                                    (click)=\\\"limpar()\\\">Limpar</button>\\n\\n\\n\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                        <table class=\\\"table table-striped\\\">\\n                            <thead style=\\\"background: #24292e; color: white;\\\">\\n                                <tr>\\n                                    <th style=\\\"padding: 15px; color: white;\\\"></th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">ID</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">RAT</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Dt. Criação</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Dt. Atendimento</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Empresa</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Unidade</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Tipo</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Técnicos</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Responsável</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Status</th>\\n                                    <th></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr\\n                                    *ngFor=\\\"let atendimento of atendimentos  | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                                    <td><input *ngIf=\\\"atendimento.stStatus == 'atendimento_pendente_confirmacao'\\\"\\n                                            type=\\\"checkbox\\\" class=\\\"checkbox\\\" value=true\\n                                            [(ngModel)]=\\\"atendimento.fgChecked\\\" data-toggle=\\\"checkbox\\\"></td>\\n                                    <td>{{atendimento.cdAtendimento}}</td>\\n                                    <td>{{atendimento.nrRat}}</td>\\n                                    <td>\\n                                        <span>{{atendimento.dtCriacao | date:'dd/MM/yyyy' }}</span>\\n                                    </td>\\n                                    <td>\\n                                        <span>{{atendimento.dtAtendimento | date:'dd/MM/yyyy HH:mm' }}</span>\\n                                    </td>\\n                                    <td><b>{{atendimento.nmEmpresa}}</b></td>\\n                                    <td><b>{{atendimento.nmUnidade}}</b></td>\\n                                    <td>{{atendimento.dsTipoAtendimento}}</td>\\n                                    <td>\\n                                        <span *ngFor=\\\"let tecnico of atendimento.tecnicos\\\">{{tecnico}} <br></span>\\n                                    </td>\\n                                    <td><span><b>Chamado aberto por:</b> {{atendimento.dsUserChamado}}</span> <br>\\n                                        <span><b>Atendimento aberto por:</b> {{atendimento.dsUserAtendimento}}</span>\\n                                    </td>\\n                                    <td>\\n                                        <span *ngIf=\\\"atendimento.stStatus == 'atendimento_pendente_confirmacao'\\\"><b\\n                                                style=\\\"color: red;\\\">Pendente Confirmação</b></span>\\n                                        <span *ngIf=\\\"atendimento.stStatus == 'atendimento_em_aberto'\\\"><b\\n                                                style=\\\"color: rgb(49, 8, 196);\\\">Confirmado</b></span>\\n                                        <span *ngIf=\\\"atendimento.stStatus == 'atendimento_iniciado'\\\"><b\\n                                                style=\\\"color: orange;\\\">Iniciado</b></span>\\n                                        <span *ngIf=\\\"atendimento.stStatus == 'atendimento_concluido'\\\"><b\\n                                                style=\\\"color: green;\\\">Finalizado</b></span>\\n                                    </td>\\n                                    <td>\\n                                        <button class=\\\"btn btn-theme\\\" [routerLink]=\\\"['/atendimento/detalhe']\\\"\\n                                            [queryParams]=\\\"{cdAtendimento: atendimento.cdAtendimento}\\\">Detalhes</button>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <ngb-pagination style=\\\"float: right; margin-right: 25px;\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\"\\n                    [collectionSize]=\\\"atendimentos.length\\\" [maxSize]=\\\"5\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\"\\n                    *ngIf=\\\"atendimentos.length > 0\\\">\\n                </ngb-pagination>\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <!--/.col-->\\n</div><!-- /.container-fluid -->\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n\\n    .modal-backdrop {\\n        z-index: 2;\\n    }\\n\\n    .input-error input {\\n        border-color: red;\\n    }\\n\\n    .input-error label {\\n        color: red;\\n    }\\n</style>\\n\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<body>\\n\\n\\n\\n    <!-- breaking change 'cui-breadcrumb' -->\\n    <!-- deprecation warning for 'app-breadcrumb' -->\\n    <!--<ol class=\\\"breadcrumb\\\">-->\\n    <!--<app-breadcrumb></app-breadcrumb>-->\\n    <!--&lt;!&ndash; Breadcrumb Menu&ndash;&gt;-->\\n    <!--<li class=\\\"breadcrumb-menu d-md-down-none\\\">-->\\n    <!--<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>-->\\n    <!--<a class=\\\"btn\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"icon-graph\\\"></i> &nbsp;Dashboard</a>-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-settings\\\"></i> &nbsp;Settings</a>-->\\n    <!--</div>-->\\n    <!--</li>-->\\n    <!--</ol>-->\\n    <div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 25px;\\\">\\n            <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"padding: 0;\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <form style=\\\"padding: 30px;\\\">\\n                                    <input type=\\\"hidden\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdEmpresa}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Empresa <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select (selectionChange)=\\\"carregarUnidades()\\\" name=\\\"cdEmpresa\\\"\\n                                                    [disabled]=\\\"form.cdAtendimento\\\" [(ngModel)]=\\\"form.cdEmpresa\\\">\\n                                                    <mat-option *ngFor=\\\"let e of empresas\\\" [value]=\\\"e.cdEmpresa\\\">\\n                                                        {{e.nmEmpresa}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdUnidade}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Unidade <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select [(ngModel)]=\\\"form.cdUnidade\\\" name=\\\"cdUnidade\\\"\\n                                                    [disabled]=\\\"form.cdAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let u of unidades\\\" [value]=\\\"u.cdUnidade\\\">\\n                                                        {{u.nmUnidade}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-12 col-md-12 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdTipoAtendimento}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Tipo Atendimento <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select (selectionChange)=\\\"carregarEquipamentos()\\\"\\n                                                    name=\\\"cdTipoAtendimento\\\"\\n                                                    [disabled]=\\\"form.cdAtendimento && form.stStatus == 'chamado'\\\"\\n                                                    [(ngModel)]=\\\"form.cdTipoAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let t of tiposAtendimento\\\"\\n                                                        [value]=\\\"t.cdTipoAtendimento\\\">\\n                                                        {{t.dsTipoAtendimento}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-10 col-md-10 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdTipoAtendimento}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Data Atendimento <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <input matInput name=\\\"dtAtendimento\\\" (click)=\\\"dtAtendimento.open()\\\"\\n                                                    readonly [(ngModel)]=\\\"form.dtAtendimento\\\"\\n                                                    [matDatepicker]=\\\"dtAtendimento\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtAtendimento\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtAtendimento></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-2 col-md-2 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.hrAtendimento}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"\\n                                                class=\\\"example-full-width\\\">\\n                                                <mat-label>Horário Atendimento <span style=\\\"color:red\\\">*</span>\\n                                                </mat-label>\\n                                                <input matInput name=\\\"hrAtendimento\\\" [dropSpecialCharacters]=\\\"false\\\"\\n                                                    mask=\\\"00:00\\\" [(ngModel)]=\\\"form.hrAtendimento\\\">\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n\\n\\n\\n\\n                                    <!-- <hr> -->\\n                                    <h4>Descrição do Serviço <span style=\\\"color:red\\\">*</span></h4>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                                            <textarea class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\"\\n                                                [(ngModel)]=\\\"form.dsDescricao\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n\\n                                    <!-- <hr> -->\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-10 col-md-10 col-sm-12\\\">\\n                                            <h4>Status </h4>\\n                                            <input *ngIf=\\\"form.stStatus == 'chamado'\\\" value='Chamado'\\n                                                class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                            <input *ngIf=\\\"form.stStatus == 'atendimento_pendente_confirmacao'\\\"\\n                                                value='Pendente Confirmação' class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                            <input *ngIf=\\\"form.stStatus == 'atendimento_em_aberto'\\\" value='Confirmado'\\n                                                class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                            <input *ngIf=\\\"form.stStatus == 'atendimento_iniciado'\\\" value='Iniciado'\\n                                                class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                            <input *ngIf=\\\"form.stStatus == 'atendimento_concluido'\\\" value='Finalizado'\\n                                                class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                        </div>\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-12\\\">\\n                                            <h4>Nº RAT</h4>\\n                                            <input value='{{form.nrRat}}' class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"nrRat\\\"\\n                                                [disabled]=\\\"true\\\">\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div  class=\\\"col-lg-3 col-md-3 col-sm-6\\\">\\n                                            <h4>Iniciado Por</h4>\\n                                            <input value='{{form.iniciadoPor}}' class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                name=\\\"dsDescricao\\\" [disabled]=\\\"true\\\">\\n                                        </div>\\n                                        <div  class=\\\"col-lg-3 col-md-3 col-sm-6\\\">\\n                                            <h4>Iniciado Em</h4>\\n                                            <input value='{{form.dtInicio | date:\\\"dd/MM/yyyy HH:mm\\\" }}' class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"nrRat\\\"\\n                                                [disabled]=\\\"true\\\">\\n                                        </div>\\n                                        <div  class=\\\"col-lg-3 col-md-3 col-sm-6\\\">\\n                                            <h4>Finalizado Em </h4>\\n                                            <input value='{{form.dtFim | date:\\\"dd/MM/yyyy HH:mm\\\" }}' class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\"\\n                                                [disabled]=\\\"true\\\">\\n                                        </div>\\n                                        <div  class=\\\"col-lg-3 col-md-3 col-sm-6\\\">\\n                                            <h4>Finalizado Por</h4>\\n                                            <input value='{{form.finalizadoPor}}' class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                name=\\\"nrRat\\\" [disabled]=\\\"true\\\">\\n                                        </div>\\n                                    </div>\\n\\n                                    <hr>\\n\\n                                    <h4>Equipamentos <span *ngIf=\\\"!form.cdAtendimento\\\" style=\\\"color:red\\\">*</span></h4>\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!form.cdAtendimento\\\">\\n                                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dsEquipamento\\\"\\n                                                [disabled]=\\\"form.cdAtendimento && form.stStatus == 'chamado'\\\"\\n                                                [(ngModel)]=\\\"equipamento.dsEquipamento\\\" style=\\\"display: inline-block;\\\">\\n                                        </div>\\n                                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-label>Tipo</mat-label>\\n                                                <mat-select\\n                                                    [disabled]=\\\"form.cdAtendimento && form.stStatus == 'chamado'\\\"\\n                                                    [(ngModel)]=\\\"equipamento.dsTipo\\\" name=\\\"tiposEquipamento\\\">\\n                                                    <mat-option *ngFor=\\\"let tipo of tiposEquipamento\\\" [value]=\\\"tipo\\\">\\n                                                        {{tipo}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-12\\\">\\n\\n                                            <button title=\\\"Editar\\\" style=\\\"float: right;\\\" (click)=\\\"addEquipamento()\\\"\\n                                                [disabled]=\\\"form.cdAtendimento && form.stStatus == 'chamado'\\\"\\n                                                class=\\\"btn btn-fill btn-info btn-simple btn-md\\\"\\n                                                [disabled]=\\\"!equipamento.dsEquipamento || !equipamento.dsTipo\\\">\\n                                                Adicionar\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </button>\\n\\n                                        </div>\\n                                    </div>\\n                                    <br>\\n                                    <div class=\\\"content table-responsive table-full-width\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th>Nome</th>\\n                                                    <th>Tipo</th>\\n                                                    <th></th>\\n\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n\\n                                                <tr *ngFor=\\\"let e of form.equipamentos; let i = index\\\">\\n                                                    <td><b>{{e.dsEquipamento}}</b></td>\\n\\n                                                    <td>{{e.dsTipo}}</td>\\n\\n                                                    <td class=\\\"td-actions text-right\\\">\\n\\n\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n\\n                                    <hr>\\n\\n                                    <h4>Técnicos <span style=\\\"color:red\\\">*</span></h4>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-10 col-md-10 col-sm-12\\\">\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-label>Técnico</mat-label>\\n                                                <mat-select [(ngModel)]=\\\"tecnico\\\" name=\\\"tecnicos\\\">\\n                                                    <mat-option *ngFor=\\\"let t of tecnicos\\\" [value]=\\\"t\\\">\\n                                                        {{t.nmUser}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-12\\\">\\n\\n                                            <button title=\\\"Editar\\\" style=\\\"float: right;\\\" (click)=\\\"addTecnico()\\\"\\n                                                class=\\\"btn btn-fill btn-info btn-simple btn-md\\\" [disabled]=\\\"!tecnico\\\">\\n                                                Adicionar\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </button>\\n\\n                                        </div>\\n                                    </div>\\n                                    <br>\\n                                    <div class=\\\"content table-responsive table-full-width\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th>Nome</th>\\n                                                    <th></th>\\n\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n\\n                                                <tr *ngFor=\\\"let t of form.tecnicos; let i = index\\\">\\n                                                    <td><b>{{t.nmUser}}</b></td>\\n\\n                                                    <td class=\\\"td-actions text-right\\\">\\n                                                        <a rel=\\\"tooltip\\\" title=\\\"Remove\\\" (click)=\\\"removerTecnico(i)\\\"\\n                                                            class=\\\"btn btn-danger btn-fill btn-simple btn-md\\\">\\n                                                            Deletar\\n                                                            <i class=\\\"fa fa-trash\\\"></i>\\n                                                        </a>\\n\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n\\n                                    <hr>\\n\\n                                    <div>\\n\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"salvar($event)\\\"\\n                                            style=\\\"margin-right: 10px;\\\">Salvar&nbsp; <i class=\\\"fa fa-save\\\"></i></button>\\n                                        <button class=\\\"btn btn-fill btn-primary\\\" (click)=\\\"confirmarAtendimento($event)\\\"\\n                                            *ngIf=\\\"form.stStatus == 'atendimento_pendente_confirmacao'\\\"\\n                                            style=\\\"margin-right: 10px;\\\">Confirmar&nbsp; <i\\n                                                class=\\\"fa fa-check\\\"></i></button>\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/atendimento/consulta']\\\">\\n                                            Voltar&nbsp; <i class=\\\"fa fa-arrow-left\\\"></i></button>\\n                                        <!-- <button class=\\\"btn btn-danger\\\" style=\\\"margin-left: 5px;\\\" value=\\\"0\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\"><i\\n                                            class=\\\"fa fa-close\\\"></i>&nbsp;Inativar</button> -->\\n                                        <!-- <button class=\\\"btn btn-fill btn-theme\\\" style=\\\"margin-left: 5px;\\\" value=\\\"1\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\">Ativar</button> -->\\n\\n                                    </div>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!--/.col-->\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n        <!--/.col-->\\n    </div><!-- /.container-fluid -->\\n\\n</body>\\n<!-- Button trigger modal -->\\n<!-- Modal -->\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n</style>\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\"\\n                        style=\\\"background-color: #2f353b; color: white; padding: 15px; font-size: 20px;\\\">\\n                        <b>\\n                        </b>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div style=\\\"padding: 25px;\\\">\\n                            <table width=\\\"100%\\\">\\n                                <thead>\\n                                    <tr style=\\\"width: 100%;\\\">\\n                                        <td width=\\\"10%\\\"></td>\\n                                        <td width=\\\"70%\\\"> </td>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>ID</b></label></td>\\n                                        <td>\\n                                            <input type=\\\"number\\\" class=\\\"form-control col-6\\\"\\n                                                [(ngModel)]=\\\"filtro.cdAtendimento\\\" placeholder=\\\"Digite o ID do chamado\\\">\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Empresa</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <input type=\\\"text\\\" class=\\\"form-control col-6\\\" [(ngModel)]=\\\"filtro.nmEmpresa\\\"\\n                                                placeholder=\\\"Digite o nome da empresa\\\">\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Tipo</b></label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-select (selectionChange)=\\\"carregarEquipamentos()\\\"\\n                                                    name=\\\"cdTipoAtendimento\\\" [(ngModel)]=\\\"filtro.cdTipoAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let t of tiposAtendimento\\\"\\n                                                        [value]=\\\"t.cdTipoAtendimento\\\">\\n                                                        {{t.dsTipoAtendimento}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td> <label for=\\\"company\\\" class=\\\"control-label\\\">Periodo Criação</label>\\n                                        </td>\\n                                        <td>\\n                                            <mat-form-field style=\\\"margin-right: 20px;\\\">\\n                                                <mat-label>De</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoDe\\\" (click)=\\\"dtPeriodoDe.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroDe\\\" [matDatepicker]=\\\"dtPeriodoDe\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoDe\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoDe></mat-datepicker>\\n                                            </mat-form-field>\\n                                            <mat-form-field>\\n                                                <mat-label>Até</mat-label>\\n                                                <input matInput name=\\\"dtPeriodoAte\\\" (click)=\\\"dtPeriodoAte.open()\\\"\\n                                                    [(ngModel)]=\\\"filtro.dtFiltroAte\\\" [matDatepicker]=\\\"dtPeriodoAte\\\">\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"dtPeriodoAte\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #dtPeriodoAte></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                            <hr><br>\\n                            <div class=\\\"form-group\\\">\\n                                <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"buscar()\\\" style=\\\"margin-right: 5px\\\"><i\\n                                        class=\\\"fa fa-search\\\"></i>&nbsp;Buscar</button>\\n                                <!-- <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/chamado/detalhe']\\\"\\n                                    [queryParams]=\\\"{new: 1}\\\"><i class=\\\"fa fa-file\\\"></i>&nbsp;Novo</button> -->\\n                                <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"limpar()\\\"\\n                                    >Limpar</button>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                        <table class=\\\"table table-striped\\\">\\n                            <thead style=\\\"background: #24292e; color: white;\\\">\\n                                <tr>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">ID</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Dt. Criação</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Empresa</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Unidade</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Tipo</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Responsável</th>\\n                                    <th></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr\\n                                    *ngFor=\\\"let chamado of chamados  | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                                    <td>{{chamado.cdAtendimento}}</td>\\n                                    <td>\\n                                        <span>{{chamado.dtCriacao | date:'dd/MM/yyyy' }}</span>\\n                                    </td>\\n                                    <td><b>{{chamado.nmEmpresa}}</b></td>\\n                                    <td><b>{{chamado.nmUnidade}}</b></td>\\n                                    <td>{{chamado.dsTipoAtendimento}}</td>\\n                                    <td>{{chamado.dsUserChamado}}</td>\\n                                    <td>\\n                                        <button class=\\\"btn btn-theme\\\" [routerLink]=\\\"['/chamado/detalhe']\\\"\\n                                            [queryParams]=\\\"{cdAtendimento: chamado.cdAtendimento}\\\">Detalhes</button>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <ngb-pagination style=\\\"float: right; margin-right: 25px;\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\"\\n                    [collectionSize]=\\\"chamados.length\\\" [maxSize]=\\\"5\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\"\\n                    *ngIf=\\\"chamados.length > 0\\\">\\n                </ngb-pagination>\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <!--/.col-->\\n</div><!-- /.container-fluid -->\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n\\n    .modal-backdrop {\\n        z-index: 2;\\n    }\\n\\n    .input-error input {\\n        border-color: red;\\n    }\\n\\n    .input-error label {\\n        color: red;\\n    }\\n</style>\\n\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<body>\\n\\n\\n\\n    <!-- breaking change 'cui-breadcrumb' -->\\n    <!-- deprecation warning for 'app-breadcrumb' -->\\n    <!--<ol class=\\\"breadcrumb\\\">-->\\n    <!--<app-breadcrumb></app-breadcrumb>-->\\n    <!--&lt;!&ndash; Breadcrumb Menu&ndash;&gt;-->\\n    <!--<li class=\\\"breadcrumb-menu d-md-down-none\\\">-->\\n    <!--<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>-->\\n    <!--<a class=\\\"btn\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"icon-graph\\\"></i> &nbsp;Dashboard</a>-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-settings\\\"></i> &nbsp;Settings</a>-->\\n    <!--</div>-->\\n    <!--</li>-->\\n    <!--</ol>-->\\n    <div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 25px;\\\">\\n            <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"padding: 0;\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <form style=\\\"padding: 30px;\\\">\\n                                    <input type=\\\"hidden\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdEmpresa}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Empresa <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select (selectionChange)=\\\"carregarUnidades()\\\" name=\\\"cdEmpresa\\\"\\n                                                    [disabled]=\\\"form.cdAtendimento\\\" [(ngModel)]=\\\"form.cdEmpresa\\\">\\n                                                    <mat-option *ngFor=\\\"let e of empresas\\\" [value]=\\\"e.cdEmpresa\\\">\\n                                                        {{e.nmEmpresa}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdUnidade}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Unidade <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select [(ngModel)]=\\\"form.cdUnidade\\\" name=\\\"cdUnidade\\\"\\n                                                    [disabled]=\\\"form.cdAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let u of unidades\\\" [value]=\\\"u.cdUnidade\\\">\\n                                                        {{u.nmUnidade}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-12 col-md-12 col-sm-12\\\"\\n                                            [class]=\\\"{'input-error': chamadoFormSubmitted && !form.cdTipoAtendimento}\\\">\\n                                            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\n                                                <mat-label>Tipo Chamado <span style=\\\"color:red\\\">*</span></mat-label>\\n                                                <mat-select (selectionChange)=\\\"carregarEquipamentos()\\\"\\n                                                    name=\\\"cdTipoAtendimento\\\" [(ngModel)]=\\\"form.cdTipoAtendimento\\\">\\n                                                    <mat-option *ngFor=\\\"let t of tiposAtendimento\\\"\\n                                                        [value]=\\\"t.cdTipoAtendimento\\\">\\n                                                        {{t.dsTipoAtendimento}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                            <!-- <label for=\\\"company\\\">Tipo Chamado<span style=\\\"color:red\\\">*</span></label>\\n                                            <select class=\\\"form-control\\\" name=\\\"cdTipoAtendimento\\\"\\n                                                [(ngModel)]=\\\"form.cdTipoAtendimento\\\" placeholder=\\\"Tipo atendimento\\\"\\n                                                required>\\n                                                <option *ngFor=\\\"let ta of tiposAtendimento\\\"\\n                                                    value=\\\"{{ta.cdTipoAtendimento}}\\\"\\n                                                    [selected]=\\\"form.cdTipoAtendimento == ta.cdTipoAtendimento\\\">\\n                                                    {{ta.dsTipoAtendimento}}\\n                                                </option>\\n\\n                                            </select> -->\\n                                        </div>\\n                                    </div>\\n\\n                                    <!-- <hr> -->\\n                                    <h4>Descrição do Serviço <span style=\\\"color:red\\\">*</span></h4>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                                            <textarea class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dsDescricao\\\"\\n                                                [(ngModel)]=\\\"form.dsDescricao\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n\\n                                    <hr>\\n\\n                                    <h4>Equipamentos <span style=\\\"color:red\\\">*</span></h4>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dsEquipamento\\\"\\n                                                [(ngModel)]=\\\"equipamento.dsEquipamento\\\" style=\\\"display: inline-block;\\\">\\n                                        </div>\\n                                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n                                            <mat-form-field style=\\\"width: 100%;\\\">\\n                                                <mat-label>Tipo</mat-label>\\n                                                <mat-select [(ngModel)]=\\\"equipamento.dsTipo\\\" name=\\\"tiposEquipamento\\\">\\n                                                    <mat-option *ngFor=\\\"let tipo of tiposEquipamento\\\" [value]=\\\"tipo\\\">\\n                                                        {{tipo}}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                            <!-- <select class=\\\"form-control\\\" [(ngModel)]=\\\"equipamento.dsTipo\\\"  name=\\\"dsTipo\\\">\\n                                                <option *ngFor=\\\"let tipo of tiposEquipamento\\\" value=\\\"{{tipo}}\\\"\\n                                                    selected=\\\"{{tipo == 'GMG'}}\\\" >\\n                                                    {{tipo}}\\n                                                </option>\\n                                            </select> -->\\n                                        </div>\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-12\\\">\\n\\n                                            <button title=\\\"Editar\\\" style=\\\"float: right;\\\" (click)=\\\"addEquipamento()\\\"\\n                                                class=\\\"btn btn-fill btn-info btn-simple btn-md\\\"\\n                                                [disabled]=\\\"!equipamento.dsEquipamento || !equipamento.dsTipo\\\">\\n                                                Adicionar\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </button>\\n\\n                                        </div>\\n                                    </div>\\n                                    <br>\\n                                    <div class=\\\"content table-responsive table-full-width\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th>Nome</th>\\n                                                    <th>Tipo</th>\\n                                                    <th></th>\\n\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n\\n                                                <tr *ngFor=\\\"let e of form.equipamentos; let i = index\\\">\\n                                                    <td><b>{{e.dsEquipamento}}</b></td>\\n\\n                                                    <td>{{e.dsTipo}}</td>\\n\\n                                                    <td class=\\\"td-actions text-right\\\">\\n\\n                                                        <a rel=\\\"tooltip\\\" title=\\\"Remove\\\" (click)=\\\"deletarEquipamento(i)\\\"\\n                                                            class=\\\"btn btn-danger btn-fill btn-simple btn-md\\\"\\n                                                            [disabled]=\\\"form.cdAtendimento\\\">\\n                                                            Excluir\\n                                                            <i class=\\\"fa fa-trash\\\"></i>\\n                                                        </a>\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n\\n                                    <hr>\\n\\n                                    <div>\\n\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"salvar($event)\\\"\\n                                            style=\\\"margin-right: 10px;\\\">Salvar&nbsp; <i class=\\\"fa fa-save\\\"></i></button>\\n                                        <button class=\\\"btn btn-fill btn-danger\\\" [routerLink]=\\\"['/atendimento/detalhe']\\\"\\n                                            [queryParams]=\\\"{cdAtendimento: form.cdAtendimento}\\\" [disabled]=\\\"form.stStatus != 'chamado'\\\"\\n                                             style=\\\"margin-right: 10px;\\\">Gerar\\n                                            Atendimento&nbsp; <i class=\\\"fa fa-file\\\"></i></button>\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/chamado/consulta']\\\">\\n                                            Voltar&nbsp; <i class=\\\"fa fa-arrow-left\\\"></i></button>\\n                                        <!-- <button class=\\\"btn btn-danger\\\" style=\\\"margin-left: 5px;\\\" value=\\\"0\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\"><i\\n                                            class=\\\"fa fa-close\\\"></i>&nbsp;Inativar</button> -->\\n                                        <!-- <button class=\\\"btn btn-fill btn-theme\\\" style=\\\"margin-left: 5px;\\\" value=\\\"1\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\">Ativar</button> -->\\n\\n                                    </div>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!--/.col-->\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n        <!--/.col-->\\n    </div><!-- /.container-fluid -->\\n\\n</body>\\n<!-- Button trigger modal -->\\n<!-- Modal -->\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n</style>\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\"\\n                        style=\\\"background-color: #2f353b; color: white; padding: 15px; font-size: 20px;\\\">\\n                        <b>\\n                        </b>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div style=\\\"padding: 25px;\\\">\\n                            <table width=\\\"100%\\\">\\n                                <thead>\\n                                    <tr style=\\\"width: 100%;\\\">\\n                                        <td width=\\\"10%\\\"></td>\\n                                        <td width=\\\"70%\\\"> </td>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>Nome da Empresa</b></label></td>\\n                                        <td> <input type=\\\"text\\\" class=\\\"form-control col-6\\\"\\n                                                [(ngModel)]=\\\"filtro.nmEmpresa\\\" placeholder=\\\"Digite o nome da empresa\\\">\\n                                        </td>\\n                                    </tr>\\n                                    <tr height=\\\"50px\\\">\\n                                        <td> <label for=\\\"company\\\"><b>CNPJ</b></label>\\n                                        </td>\\n                                        <td> <input type=\\\"text\\\" class=\\\"form-control col-6\\\"\\n                                                [(ngModel)]=\\\"filtro.nrDocumento\\\" placeholder=\\\"Digite o CNPJ\\\"></td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                            <hr><br>\\n                            <div class=\\\"form-group\\\">\\n                                <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"buscar()\\\" style=\\\"margin-right: 5px\\\"><i\\n                                        class=\\\"fa fa-search\\\"></i>&nbsp;Buscar</button>\\n                                <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/cliente/detalhe']\\\"\\n                                    [queryParams]=\\\"{new: 1}\\\"><i class=\\\"fa fa-file\\\"></i>&nbsp;Novo</button>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                        <table class=\\\"table table-striped\\\">\\n                            <thead style=\\\"background: #24292e; color: white;\\\">\\n                                <tr>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">ID</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Empresa</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">CNPJ</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">I.E</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\">Status</th>\\n                                    <th style=\\\"padding: 15px; color: white;\\\"></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr\\n                                    *ngFor=\\\"let cliente of clientes  | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                                    <td>{{cliente.cdEmpresa}}</td>\\n                                    <td><b>{{cliente.nmEmpresa}}</b></td>\\n                                    <td>\\n                                        <span>{{cliente.nrDocumento | mask: '00.000.000/0000-00' }}</span></td>\\n                                    <td>\\n                                        <span *ngIf=\\\"cliente.nrInscricaoEstadual\\\">{{cliente.nrInscricaoEstadual}}</span>\\n                                        <span *ngIf=\\\"!cliente.nrInscricaoEstadual\\\">Não informado</span>\\n                                    </td>\\n                                    <td *ngIf=\\\"cliente.stStatus == 'ativo'\\\">Ativo</td>\\n                                    <td *ngIf=\\\"cliente.stStatus == 'inativo'\\\">Inativo</td>\\n                                    <td>\\n                                        <button class=\\\"btn btn-theme\\\"\\n                                            [routerLink]=\\\"['/cliente/detalhe']\\\"\\n                                            [queryParams]=\\\"{cdCliente: cliente.cdEmpresa}\\\">Editar</button>\\n                                        <button class=\\\"btn btn-fill btn-primary\\\"  style=\\\"float: right;\\\" [routerLink]=\\\"['/chamado/detalhe']\\\"\\n                                            [queryParams]=\\\"{cdEmpresa: cliente.cdEmpresa}\\\">Chamado</button>\\n                                        \\n\\n\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <ngb-pagination style=\\\"float: right; margin-right: 25px;\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\"\\n                    [collectionSize]=\\\"clientes.length\\\" [maxSize]=\\\"5\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\"\\n                    *ngIf=\\\"clientes.length > 0\\\">\\n                </ngb-pagination>\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <!--/.col-->\\n</div><!-- /.container-fluid -->\"","export default \"<style>\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n\\n    .modal-backdrop {\\n        z-index: 2;\\n    }\\n\\n    .input-error input {\\n        border-color: red;\\n    }\\n\\n    .input-error label{\\n        color:red;\\n    }\\n</style>\\n\\n<ngx-spinner color=\\\"#ed1c24\\\" type=\\\"line-scale\\\" size=\\\"medium\\\"></ngx-spinner>\\n\\n<body>\\n\\n\\n\\n    <!-- breaking change 'cui-breadcrumb' -->\\n    <!-- deprecation warning for 'app-breadcrumb' -->\\n    <!--<ol class=\\\"breadcrumb\\\">-->\\n    <!--<app-breadcrumb></app-breadcrumb>-->\\n    <!--&lt;!&ndash; Breadcrumb Menu&ndash;&gt;-->\\n    <!--<li class=\\\"breadcrumb-menu d-md-down-none\\\">-->\\n    <!--<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>-->\\n    <!--<a class=\\\"btn\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"icon-graph\\\"></i> &nbsp;Dashboard</a>-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-settings\\\"></i> &nbsp;Settings</a>-->\\n    <!--</div>-->\\n    <!--</li>-->\\n    <!--</ol>-->\\n    <div class=\\\"container-fluid\\\" style=\\\"padding: 0 !important\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top: 25px;\\\">\\n            <div class=\\\"card\\\" style=\\\"border: none;\\\">\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0;\\\">\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"padding: 0;\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <form style=\\\"padding: 30px;\\\">\\n                                    <input type=\\\"hidden\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-12 col-md-12 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nmEmpresa}\\\"> \\n                                            <label for=\\\"company\\\" >Nome da Empresa <span\\n                                                    style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmEmpresa\\\"\\n                                                [(ngModel)]=\\\"form.nmEmpresa\\\" placeholder=\\\"Digite o nome da empresa\\\"\\n                                                required>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nrDocumento}\\\">\\n                                            <label for=\\\"vat\\\">CNPJ <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [dropSpecialCharacters]=\\\"false\\\"\\n                                                [(ngModel)]=\\\"form.nrDocumento\\\" mask='00.000.000/0000-00' name=\\\"nrCnpj\\\"\\n                                                id=\\\"vat\\\" placeholder=\\\"Digite o número do CNPJ\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" >\\n                                            <label for=\\\"street\\\">Inscrição Estadual</label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrIe\\\"\\n                                                [dropSpecialCharacters]=\\\"false\\\" mask='000.000.000.000'\\n                                                [(ngModel)]=\\\"form.nrInscricaoEstadual\\\"\\n                                                placeholder=\\\"Digite o número da Inscrição Estadual\\\">\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-2 col-md-2 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nrCep}\\\">\\n                                            <label for=\\\"company\\\">CEP <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrCep\\\"\\n                                                [dropSpecialCharacters]=\\\"true\\\" mask='00000-000'\\n                                                (blur)=\\\"carregarEnderecoEmpresaByCep()\\\" [(ngModel)]=\\\"form.nrCep\\\"\\n                                                placeholder=\\\"Digite o CEP da empresa\\\" required>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-8 col-md-8 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nmRua}\\\">\\n                                            <label for=\\\"company\\\">Endereço <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmRua\\\"\\n                                                [(ngModel)]=\\\"form.nmRua\\\" placeholder=\\\"Digite o endereço da empresa\\\"\\n                                                required>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-2 col-md-2 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nrNumero}\\\">\\n                                            <label for=\\\"company\\\">Número <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrNumero\\\"\\n                                                [(ngModel)]=\\\"form.nrNumero\\\" placeholder=\\\"Digite o número da empresa\\\"\\n                                                required>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" >\\n                                            <label for=\\\"company\\\">Complemento \\n                                                < </label>\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dsComplemento\\\"\\n                                                        [(ngModel)]=\\\"form.dsComplemento\\\"\\n                                                        placeholder=\\\"Digite o complemento\\\" required>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nmBairro}\\\">\\n                                            <label for=\\\"company\\\">Bairro <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmBairro\\\"\\n                                                [(ngModel)]=\\\"form.nmBairro\\\" placeholder=\\\"Digite o bairro\\\" required>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nmCidade}\\\">\\n                                            <label for=\\\"street\\\">Cidade <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmCidade\\\"\\n                                                [(ngModel)]=\\\"form.nmCidade\\\" placeholder=\\\"Digite a cidade\\\" required>\\n                                        </div>\\n                                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\" [class]=\\\"{'input-error': empresaFormSubmitted && !form.nmEstado}\\\">\\n                                            <label for=\\\"vat\\\">Estado <span style=\\\"color:red\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmEstado\\\"\\n                                                [(ngModel)]=\\\"form.nmEstado\\\" placeholder=\\\"Digite o estado\\\" required>\\n                                        </div>\\n\\n                                    </div>\\n                                    <hr>\\n                                    <button title=\\\"Editar\\\" style=\\\"float: right;\\\" (click)=\\\"addUnidade()\\\"\\n                                        data-target=\\\"#modalDetalheUnidade\\\" data-toggle=\\\"modal\\\"\\n                                        class=\\\"btn btn-fill btn-info btn-simple btn-md\\\">\\n                                        Novo\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\n                                    </button>\\n                                    <h4>Unidades</h4>\\n                                    <br>\\n                                    <div class=\\\"content table-responsive table-full-width\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th>Unidade</th>\\n                                                    <th>Endereço</th>\\n                                                    <th>Contato</th>\\n                                                    <th>Telefone</th>\\n                                                    <th>Contrato</th>\\n                                                    <th></th>\\n\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n\\n                                                <tr *ngFor=\\\"let u of form.unidades; let i = index\\\">\\n                                                    <td><b>{{u.nmUnidade}}</b></td>\\n                                                    <td>\\n                                                        {{u.nmRua}} {{u.nrNumero}} {{u.dsComplemento}}\\n                                                        <br>{{u.nmBairro}}\\n                                                        <br>{{u.nmCidade}}/{{u.nmEstado}}\\n                                                    </td>\\n                                                    <td>{{u.nmContatoCli}}</td>\\n                                                    <td>{{u.nrTelefone}}</td>\\n                                                    <td>\\n                                                        <span *ngIf=\\\"u.fgClienteContrato == 0\\\">Não</span>\\n                                                        <span *ngIf=\\\"u.fgClienteContrato == 1\\\">Sim</span>\\n                                                    </td>\\n                                                    <td class=\\\"td-actions text-right\\\">\\n\\n                                                        <button  *ngIf=\\\"u.fgClienteContrato\\\" [disabled]=\\\"!u.nrDuracaoContrato || !u.dtInicioContrato\\\" rel=\\\"tooltip\\\" title=\\\"Editar\\\" style=\\\"margin-right: 5px;\\\"\\n                                                            (click)=\\\"gerarAtendimentosContrato(u)\\\"\\n                                                            class=\\\"btn btn-fill btn-primary btn-simple btn-md\\\">\\n                                                            Gerar Atendimentos\\n                                                        </button>\\n\\n                                                        <button rel=\\\"tooltip\\\" title=\\\"Editar\\\" style=\\\"margin-right: 5px;\\\"\\n                                                            (click)=\\\"editarUnidade(u)\\\"\\n                                                            data-target=\\\"#modalDetalheUnidade\\\" data-toggle=\\\"modal\\\"\\n                                                            class=\\\"btn btn-fill btn-info btn-simple btn-md\\\">\\n                                                            Editar\\n                                                            <i class=\\\"fa fa-edit\\\"></i>\\n                                                        </button>\\n\\n                                                        <a rel=\\\"tooltip\\\" title=\\\"Remove\\\" (click)=\\\"inativarUnidade(u)\\\"\\n                                                            *ngIf=\\\"u.fgAtivo == 1\\\"\\n                                                            class=\\\"btn btn-danger btn-fill btn-simple btn-md\\\">\\n                                                            Inativar\\n                                                            <i class=\\\"fa fa-trash\\\"></i>\\n                                                        </a>\\n\\n                                                        <a rel=\\\"tooltip\\\" title=\\\"Remove\\\" (click)=\\\"reativarUnidade(u)\\\"\\n                                                            *ngIf=\\\"u.fgAtivo == 0\\\"\\n                                                            class=\\\"btn btn-primary btn-fill btn-simple btn-md\\\">\\n                                                            Reativar\\n                                                            <i class=\\\"fa fa-check\\\"></i>\\n                                                        </a>\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n                                    <hr>\\n                                    <div>\\n\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"salvar($event)\\\"\\n                                            style=\\\"margin-right: 10px;\\\">Salvar&nbsp;<i class=\\\"fa fa-save\\\"></i></button>\\n                                        <button class=\\\"btn btn-fill btn-theme\\\" [routerLink]=\\\"['/cliente/consulta']\\\">\\n                                            Voltar&nbsp; <i class=\\\"fa fa-arrow-left\\\"></i></button>\\n                                        <!-- <button class=\\\"btn btn-danger\\\" style=\\\"margin-left: 5px;\\\" value=\\\"0\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\"><i\\n                                            class=\\\"fa fa-close\\\"></i>&nbsp;Inativar</button> -->\\n                                        <!-- <button class=\\\"btn btn-fill btn-theme\\\" style=\\\"margin-left: 5px;\\\" value=\\\"1\\\"\\n                                        (click)=\\\"mudarStatusEmpresa($event)\\\">Ativar</button> -->\\n\\n                                    </div>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!--/.col-->\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n        <!--/.col-->\\n    </div><!-- /.container-fluid -->\\n\\n    <div class=\\\"modal fade\\\" id=\\\"modalDetalheUnidade\\\" role=\\\"dialog\\\" data-backdrop=\\\"false\\\" aria-hidden=\\\"true\\\"\\n        style=\\\"z-index: 10;\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <h3><b>Informações Unidade</b></h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12 col-md-12 col-sm-12\\\">\\n                            <label for=\\\"company\\\">Nome da Unidade <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmEmpresa\\\" [(ngModel)]=\\\"item.nmUnidade\\\"\\n                                placeholder=\\\"Digite o nome da empresa\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-2 col-md-2 col-sm-12\\\">\\n                            <label for=\\\"company\\\">CEP <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrCep\\\" [dropSpecialCharacters]=\\\"true\\\"\\n                                mask='00000-000' (blur)=\\\"carregarEnderecoUnidadeByCep()\\\" [(ngModel)]=\\\"item.nrCep\\\"\\n                                placeholder=\\\"Digite o CEP da empresa\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-8 col-md-8 col-sm-12\\\">\\n                            <label for=\\\"company\\\">Endereço <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmRua\\\" [(ngModel)]=\\\"item.nmRua\\\"\\n                                placeholder=\\\"Digite o endereço da empresa\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-2 col-md-2 col-sm-12\\\">\\n                            <label for=\\\"company\\\">Número <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrNumero\\\" [(ngModel)]=\\\"item.nrNumero\\\"\\n                                placeholder=\\\"Digite o número da empresa\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"company\\\">Complemento </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dsComplemento\\\"\\n                                [(ngModel)]=\\\"item.dsComplemento\\\" placeholder=\\\"Complemento da Unidade\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"company\\\">Bairro  <span style=\\\"color:red\\\">*</span> </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmBairro\\\" [(ngModel)]=\\\"item.nmBairro\\\"\\n                                placeholder=\\\"Bairro da Unidade\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"street\\\">Cidade <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmCidade\\\" [(ngModel)]=\\\"item.nmCidade\\\"\\n                                placeholder=\\\"Cidade da Unidade\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"vat\\\">Estado <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nmEstado\\\" [(ngModel)]=\\\"item.nmEstado\\\"\\n                                placeholder=\\\"Estado da Unidade\\\" required>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12 col-md-12 col-sm-12\\\">\\n                            <label for=\\\"street\\\">Contato Cliente <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrTelefone\\\" [(ngModel)]=\\\"item.nmContatoCli\\\"\\n                                placeholder=\\\"Responsável Cliente\\\" required>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"street\\\">Telefone <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrTelefone\\\" [(ngModel)]=\\\"item.nrTelefone\\\"\\n                                placeholder=\\\"Telefone para Contato\\\" [dropSpecialCharacters]=\\\"false\\\"\\n                                mask='(00) 0000-0000' required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"vat\\\">Celular </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nrCelular\\\" [(ngModel)]=\\\"item.nrCelular\\\"\\n                                placeholder=\\\"Celular para Contato\\\" [dropSpecialCharacters]=\\\"false\\\"\\n                                mask='(00) 00000-0000' required>\\n                        </div>\\n\\n                    </div>\\n                    <hr>\\n                    <h3><b>Informações Contrato</b></h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"checkbox col-lg-12 col-md-12 col-sm-12\\\">\\n                            <input type=\\\"checkbox\\\" value=true [(ngModel)]=\\\"item.fgClienteContrato\\\" id=\\\"checkbox1\\\"\\n                                data-toggle=\\\"checkbox\\\">\\n                            <label for=\\\"checkbox1\\\">\\n                                Contrato Regular?\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"street\\\">Duração Contrato <span style=\\\"color:red\\\">*</span></label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"nrDuracaoContrato\\\"\\n                                [(ngModel)]=\\\"item.nrDuracaoContrato\\\" [disabled]=\\\"!item.fgClienteContrato\\\"\\n                                placeholder=\\\"Duração do contrato (Meses)\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"street\\\">Data de início do contrato <span style=\\\"color:red\\\">*</span></label>\\n                            <mat-form-field style=\\\"display: block;\\\">\\n                                <mat-label>Início</mat-label>\\n                                <input matInput name=\\\"dtInicioContrato\\\" [matDatepicker]=\\\"inicioContratoPicker\\\"\\n                                    [(ngModel)]=\\\"item.dtInicioContrato\\\" [disabled]=\\\"!item.fgClienteContrato\\\"\\n                                    (click)=\\\"inicioContratoPicker.open()\\\">\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"inicioContratoPicker\\\">\\n                                </mat-datepicker-toggle>\\n                                <mat-datepicker #inicioContratoPicker></mat-datepicker>\\n                            </mat-form-field>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"vat\\\">Dia Previsto </label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"nrDiaPrevisto\\\"\\n                                [(ngModel)]=\\\"item.nrDiaPrevisto\\\" [disabled]=\\\"!item.fgClienteContrato\\\"\\n                                placeholder=\\\"Dia do mês previsto para o atendimento\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6 col-md-6 col-sm-12\\\">\\n                            <label for=\\\"vat\\\">Técnico Previsto </label>\\n                            <select class=\\\"form-control\\\" name=\\\"nrDiaPrevisto\\\" [(ngModel)]=\\\"item.cdTecnicoPrevisto\\\"\\n                                [disabled]=\\\"!item.fgClienteContrato\\\" placeholder=\\\"Técnico previsto para o atendimento\\\"\\n                                required>\\n                                <option *ngFor=\\\"let t of tecnicos\\\" value=\\\"{{t.cdLogin}}\\\"\\n                                    [selected]=\\\"item.cdTecnicoPrevisto == t.cdLogin\\\">{{t.nmUser}}</option>\\n\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <hr>\\n                    <h3><b>Equipamentos Contrato</b></h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipamento.dsEquipamento\\\"\\n                                style=\\\"display: inline-block;\\\" [disabled]=\\\"!item.fgClienteContrato\\\">\\n                        </div>\\n                        <div class=\\\"col-lg-5 col-md-5 col-sm-12\\\">\\n\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"equipamento.dsTipo\\\">\\n                                <option *ngFor=\\\"let tipo of tiposEquipamento\\\" value=\\\"{{tipo}}\\\"\\n                                    [disabled]=\\\"!item.fgClienteContrato\\\">{{tipo}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-lg-2 col-md-2 col-sm-12\\\">\\n\\n                            <button title=\\\"Editar\\\" style=\\\"float: right;\\\" (click)=\\\"addEquipamento(item)\\\" \\n                                [disabled]=\\\"(!item.fgClienteContrato) || (!equipamento.dsEquipamento || !equipamento.dsTipo)\\\" class=\\\"btn btn-fill btn-info btn-simple btn-md\\\">\\n                                Adicionar\\n                                <i class=\\\"fa fa-plus\\\"></i>\\n                            </button>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                            <div class=\\\"content table-responsive table-full-width\\\"\\n                                style=\\\"padding-left: 15px; padding-right: 15px;\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Nome</th>\\n                                            <th>Tipo</th>\\n                                            <th></th>\\n\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n\\n                                        <tr *ngFor=\\\"let e of item.equipamentos; let i = index\\\">\\n                                            <td>{{e.dsEquipamento}}</td>\\n                                            <td>{{e.dsTipo}}</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n\\n                                                <a rel=\\\"tooltip\\\" title=\\\"Remove\\\" (click)=\\\"removerEquipamento(item,i)\\\"\\n                                                    class=\\\"btn btn-danger btn-fill btn-simple btn-md\\\">\\n                                                    Deletar\\n                                                    <i class=\\\"fa fa-trash\\\"></i>\\n                                                </a>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-fill btn-secondary\\\" data-dismiss=\\\"modal\\\">Fechar</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-fill btn-danger\\\" [disabled]=\\\"(!item.fgClienteContrato && (!item.nmUnidade || !item.nmContatoCli || !item.nrTelefone || !item.nrCep \\n                    || !item.nmRua || !item.nrNumero || !item.nmBairro \\n                    || !item.nmCidade || !item.nmEstado) || (item.fgClienteContrato && (!item.nmUnidade || !item.nmContatoCli || !item.nrTelefone || !item.nrCep || item.equipamentos.length == 0\\n                    || !item.nmRua || !item.nrNumero || !item.nmBairro \\n                    || !item.nmCidade || !item.nmEstado || !item.nrDuracaoContrato || !item.dtInicioContrato)))\\\" (click)=\\\"salvarUnidade()\\\">Salvar</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</body>\\n<!-- Button trigger modal -->\\n<!-- Modal -->\"","export default \"\"","export default \"<style>\\n\\n    @keyframes spin {\\n        0% {\\n            transform: rotate(0deg);\\n        }\\n\\n        100% {\\n            transform: rotate(360deg);\\n        }\\n    }\\n</style>\\n<div class=\\\"wrapper\\\">\\n    <div class=\\\"sidebar\\\" data-color=\\\"black\\\" data-image=\\\"\\\" style=\\\"z-index: 1;\\\">\\n        <app-sidebar></app-sidebar>\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(assets/img/sidebar-5.jpg)\\\"></div>\\n    </div>\\n\\n    <div class=\\\"main-panel\\\">\\n        <navbar-cmp></navbar-cmp>\\n        <router-outlet></router-outlet>\\n        <div *ngIf=\\\"isMap('maps')\\\">\\n            <footer-cmp></footer-cmp>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h4 class=\\\"title\\\">{{ title }}</h4>\\n    <p class=\\\"category\\\">{{ subtitle }}</p>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div [attr.id]=\\\"chartId\\\" class=\\\"ct-chart {{ chartClass }}\\\"></div>\\n\\n    <div class=\\\"footer\\\">\\n      <div class=\\\"legend\\\">\\n        <span *ngFor=\\\"let item of legendItems\\\">\\n          <i [ngClass]=\\\"item.imageClass\\\"></i> {{ item.title }}\\n        </span>\\n      </div>\\n      <hr *ngIf=\\\"withHr\\\">\\n      <div class=\\\"stats\\\">\\n        <i [ngClass]=\\\"footerIconClass\\\"></i> {{ footerText }}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<style>\\n    @media (min-width: 1200px) {\\n        .padding-fix {\\n            margin-left: 200px;\\n        }\\n    }\\n\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n        .padding-fix {\\n            margin-left: 100px;\\n        }\\n    }\\n\\n\\n    input::-webkit-input-placeholder {\\n        color: black;\\n        /*Change the placeholder color*/\\n        opacity: 0.5;\\n        /*Change the opacity between 0 and 1*/\\n    }\\n</style>\\n\\n<ngx-spinner></ngx-spinner>\\n\\n\\n<body style=\\\"background-image: url('../../assets/img/back2.jpg'); \\\">\\n\\n    <!-- <div  style=\\\"text-align: center; padding: 280px;\\\"> -->\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 220px;\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-8 col-md-10 col-lg-12 padding-fix\\\">\\n                <div style=\\\"text-align: center; height: 400px; background-color: rgba(0,0,0,0.5); padding: 50px;\\\">\\n                    <img width=\\\"300px\\\" src=\\\"../../assets/img/logo-ups-negativo.png\\\">\\n                    <!-- <form> -->\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': submitted && !form.dsUser }\\\">\\n\\n                        <div class=\\\"input-group\\\" style=\\\"margin-bottom: 10px; margin-top: 20px;\\\">\\n                            <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.dsUser\\\" class=\\\"form-control\\\" placeholder=\\\"Usuário\\\" />\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': submitted && !form.dsPass }\\\">\\n                        <div class=\\\"input-group \\\" style=\\\"margin-bottom: 15px;\\\">\\n                            <span class=\\\"input-group-addon\\\"><i class=\\\"fa pe-7s-key\\\"></i></span>\\n\\n                            <input type=\\\"password\\\" [(ngModel)]=\\\"form.dsPass\\\" class=\\\"form-control \\\"\\n                                placeholder=\\\"Senha\\\" />\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <button (click)=\\\"login()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-fill btn-danger\\\">\\n                            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                            Login\\n                        </button>\\n                        &nbsp;\\n                        <button (click)=\\\"limpar()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-fill btn-secundary\\\">\\n                            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                            Limpar\\n                        </button>\\n                    </div>\\n                    <!-- </form> -->\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\"></div>\\n    </div>\\n</body>\\n<!-- </div> -->\"","export default \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <p class=\\\"copyright pull-right\\\">\\n            Powered by <a href=\\\"http://gaalaxy17.github.io\\\">Igor Iwashita </a>\\n        </p>\\n    </div>\\n</footer>\\n\"","export default \"<style>\\n    .btn-theme {\\n        background-color: #2f353b;\\n        color: white;\\n        border-color: #2f353b;\\n    }\\n\\n    .btn-theme:hover {\\n        background-color: #24292e;\\n        color: white;\\n        border-color: #24292e;\\n    }\\n\\n    .btn-theme:enabled {\\n        background-color: #24292e;\\n        color: white;\\n        border-color: #24292e;\\n    }\\n</style>\\n<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" (click)=\\\"sidebarToggle()\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">UPS Tecnologia</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"nav navbar-nav navbar-left\\\">\\n                <li>\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                        <!-- <i class=\\\"fa fa-dashboard\\\"></i> -->\\n                        <!-- <p class=\\\"hidden-lg hidden-md\\\">{{getTitle()}}</p> -->\\n                    </a>\\n                </li>\\n                <!-- <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                        <i class=\\\"fa fa-globe\\\"></i>\\n                        <b class=\\\"caret\\\"></b>\\n                        <span class=\\\"notification hidden-sm hidden-xs\\\">5</span>\\n                        <p class=\\\"hidden-lg hidden-md\\\">\\n                            5 Notifications\\n                            <b class=\\\"caret\\\"></b>\\n                        </p>\\n                    </a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"#\\\">Notification 1</a></li>\\n                        <li><a href=\\\"#\\\">Notification 2</a></li>\\n                        <li><a href=\\\"#\\\">Notification 3</a></li>\\n                        <li><a href=\\\"#\\\">Notification 4</a></li>\\n                        <li><a href=\\\"#\\\">Another notification</a></li>\\n                    </ul>\\n                </li>\\n                <li>\\n                    <a href=\\\"#\\\">\\n                        <i class=\\\"fa fa-search\\\"></i>\\n                        <p class=\\\"hidden-lg hidden-md\\\">Search</p>\\n                    </a>\\n                </li> -->\\n            </ul>\\n\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <!-- <li>\\n                    <a href=\\\"#\\\">\\n                        <p>Account</p>\\n                    </a>\\n                </li> -->\\n                <!-- <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                        <p>\\n                            Dropdown\\n                            <b class=\\\"caret\\\"></b>\\n                        </p>\\n                    </a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"#\\\">Action</a></li>\\n                        <li><a href=\\\"#\\\">Another action</a></li>\\n                        <li><a href=\\\"#\\\">Something</a></li>\\n                        <li><a href=\\\"#\\\">Another action</a></li>\\n                        <li><a href=\\\"#\\\">Something</a></li>\\n                        <li class=\\\"divider\\\"></li>\\n                        <li><a href=\\\"#\\\">Separated link</a></li>\\n                    </ul>\\n                </li> -->\\n                <li>\\n                    <button class=\\\"btn btn-fill btn-theme\\\" (click)=\\\"auth.logout()\\\">{{user.dsUser}}</button>\\n\\n                </li>\\n                <li class=\\\"separator hidden-lg hidden-md\\\"></li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","export default \"\\n<div class=\\\"sidebar-wrapper\\\">\\n    <div class=\\\"logo\\\">\\n        <a href=\\\"\\\" class=\\\"simple-text\\\">\\n            <div class=\\\"logo-img\\\">\\n                <!-- <img src=\\\"/assets/img/angular2-logo-white.png\\\"/> -->\\n            </div>\\n            <!-- UPS Tecnologia -->\\n            <img width=\\\"190px\\\" src=\\\"/assets/img/logo-ups-negativo.png\\\"/>\\n\\n        </a>\\n    </div>\\n    <ul class=\\\"nav responsive-nav\\\">\\n        <li *ngIf=\\\"isMobileMenu()\\\">\\n            <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                <i class=\\\"fa fa-dashboard\\\"></i>\\n\\t\\t\\t\\t<p class=\\\"hidden-lg hidden-md\\\">Dashboard</p>\\n            </a>\\n        </li>\\n        <li class=\\\"dropdown\\\" *ngIf=\\\"isMobileMenu()\\\">\\n              <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                    <i class=\\\"fa fa-globe\\\"></i>\\n                    <b class=\\\"caret hidden-sm hidden-xs\\\"></b>\\n                    <span class=\\\"notification hidden-sm hidden-xs\\\">5</span>\\n\\t\\t\\t\\t\\t<p class=\\\"hidden-lg hidden-md\\\">\\n\\t\\t\\t\\t\\t\\t5 Notifications\\n\\t\\t\\t\\t\\t\\t<b class=\\\"caret\\\"></b>\\n\\t\\t\\t\\t\\t</p>\\n              </a>\\n              <ul class=\\\"dropdown-menu\\\">\\n                <li><a href=\\\"#\\\">Notification 1555</a></li>\\n                <li><a href=\\\"#\\\">Notification 2</a></li>\\n                <li><a href=\\\"#\\\">Notification 3</a></li>\\n                <li><a href=\\\"#\\\">Notification 4</a></li>\\n                <li><a href=\\\"#\\\">Another notification</a></li>\\n              </ul>\\n        </li>\\n        <li *ngIf=\\\"isMobileMenu()\\\">\\n           <a>\\n                <i class=\\\"fa fa-search\\\"></i>\\n\\t\\t\\t\\t<p class=\\\"hidden-lg hidden-md\\\">Search</p>\\n            </a>\\n        </li>\\n        <li *ngIf=\\\"isMobileMenu()\\\">\\n           <a href=\\\"\\\">\\n               <p>Account</p>\\n            </a>\\n        </li>\\n        <li class=\\\"dropdown\\\" *ngIf=\\\"isMobileMenu()\\\">\\n              <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                    <p>\\n    \\t\\t\\t\\t\\tDropdown\\n    \\t\\t\\t\\t\\t<b class=\\\"caret\\\"></b>\\n    \\t\\t\\t\\t</p>\\n\\n              </a>\\n              <ul class=\\\"dropdown-menu\\\">\\n                <li><a href=\\\"#\\\">Action</a></li>\\n                <li><a href=\\\"#\\\">Another action</a></li>\\n                <li><a href=\\\"#\\\">Something</a></li>\\n                <li><a href=\\\"#\\\">Another action</a></li>\\n                <li><a href=\\\"#\\\">Something</a></li>\\n                <li class=\\\"divider\\\"></li>\\n                <li><a href=\\\"#\\\">Separated link</a></li>\\n              </ul>\\n        </li>\\n        <li *ngIf=\\\"isMobileMenu()\\\">\\n            <a>\\n                <p>Log out</p>\\n            </a>\\n        </li>\\n        <li class=\\\"separator hidden-lg hidden-md\\\" *ngIf=\\\"isMobileMenu()\\\"></li>\\n        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}}\\\">\\n            <a  [routerLink]=\\\"[menuItem.path]\\\">\\n                <i class=\\\"{{menuItem.icon}}\\\"></i>\\n                <p>{{menuItem.title}}</p>\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n\"","var map = {\n\t\"./layouts/admin-layout/admin-layout.module\": \"./src/app/layouts/admin-layout/admin-layout.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LocationStrategy, PlatformLocation, Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n     constructor(public location: Location) {}\n\n    ngOnInit(){\n    }\n\n    isMap(path){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      titlee = titlee.slice( 1 );\n      if(path == titlee){\n        return false;\n      }\n      else {\n        return true;\n      }\n    }\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app.routing';\nimport { NavbarModule } from './shared/navbar/navbar.module';\nimport { FooterModule } from './shared/footer/footer.module';\nimport { SidebarModule } from './sidebar/sidebar.module';\n\nimport { AppComponent } from './app.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\nimport { CommonsModule } from './commons/commons.module';\nimport { NotifierModule } from 'angular-notifier';\nimport { AdminLayoutModule } from './layouts/admin-layout/admin-layout.module';\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { AuthInterceptor } from './commons/auth.interceptor';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AtendimentoTvComponent } from './atendimento-tv/atendimento-tv.component';\n\nregisterLocaleData(localePt);\n\n@NgModule({\n  imports: [\n    CommonsModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    AppRoutingModule,\n    FormsModule,\n    AdminLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    NavbarModule,\n    FooterModule,\n    SidebarModule,\n    ReactiveFormsModule,\n    NotifierModule.withConfig({\n      position: {\n        horizontal: {\n          position: \"right\"\n        },\n        vertical: {\n          position: \"top\"\n        }\n\n      },\n      theme: \"material\"\n    }),\n    NgbModule\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminLayoutComponent,\n    AtendimentoTvComponent\n    \n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: LOCALE_ID, useValue: 'pt-BR' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { AtendimentoTvComponent } from './atendimento-tv/atendimento-tv.component';\n\nconst routes: Routes =[\n  // {\n  //   path: '',\n  //   redirectTo: 'dashboard',\n  //   pathMatch: 'full',\n  // }, \n  {\n    path: 'login',\n    pathMatch: 'full',\n    component: LoginComponent\n  }, \n  {\n    path: 'atendimento/tv',\n    pathMatch: 'full',\n    component: AtendimentoTvComponent\n  }, \n  {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n        {\n      path: '',\n      loadChildren: './layouts/admin-layout/admin-layout.module#AdminLayoutModule'\n  }]},\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule.forRoot(routes,{\n       useHash: true\n    })\n  ],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0ZW5kaW1lbnRvLXR2L2F0ZW5kaW1lbnRvLXR2LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AtendimentoService } from 'app/services/atendimento.service';\nimport { Observable, interval, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-atendimento-tv',\n  templateUrl: './atendimento-tv.component.html',\n  styleUrls: ['./atendimento-tv.component.css']\n})\nexport class AtendimentoTvComponent implements OnInit {\n\n  constructor(public atendimentoService: AtendimentoService, public router:Router) { }\n\n  atendimentos: any = [];\n\n  private updateSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.carregarDados();\n\n    this.updateSubscription = interval(15000).subscribe(\n      (val) => { this.carregarDados()\n    })\n\n  }\n\n  voltar(){\n    this.updateSubscription.unsubscribe();\n    this.router.navigateByUrl(\"/dashboard\");\n  }\n\n  carregarDados(){\n    this.atendimentoService.getAtendimentos().then((results)=>{\n      console.log(results);\n      this.atendimentos = results;\n    })\n  }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXRlbmRpbWVudG8vYXRlbmRpbWVudG8tY29uc3VsdGEvYXRlbmRpbWVudG8tY29uc3VsdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdGVuZGltZW50by9hdGVuZGltZW50by1jb25zdWx0YS9hdGVuZGltZW50by1jb25zdWx0YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi10aGVtZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNTNiOyBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMmYzNTNiO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lOmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG5cbiAgLmJ0bi10aGVtZTplbmFibGVke1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lLXNlY29uZGFyeXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGJvcmRlci1jb2xvcjogIzNmNGY1YTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5OmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MTU0NjE7XG4gICAgYm9yZGVyLWNvbG9yOiAjNDE1NDYxO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { AtendimentoService } from 'app/services/atendimento.service';\nimport { ChamadoService } from 'app/services/chamado.service';\n\n@Component({\n  selector: 'app-atendimento-consulta',\n  templateUrl: './atendimento-consulta.component.html',\n  styleUrls: ['./atendimento-consulta.component.css']\n})\nexport class AtendimentoConsultaComponent implements OnInit {\n\n\n  public page = 1;\n  public pageSize = 10;\n\n  filtro: any = {\n    cdAtendimento: null,\n    nmEmpresa: null,\n    cdTipoAtendimento: null,\n    dsTipoEquipamento: null,\n    dtFiltroDe: null,\n    dtFiltroAte: null,\n    cdLoginTecnico: null,\n    dtFiltroAtendimentoDe: null,\n    dtFiltroAtendimentoAte: null,\n    stStatus: \"atendimento_pendente_confirmacao\"\n  }\n\n  atendimentos: any = [];\n  empresas: any = [];\n  unidades: any = [];\n  tiposAtendimento: any = [];\n  tecnicos: any = [];\n\n  tiposEquipamento = [\n    \"GMG\", \"Nobreak\", \"Infraestrutura\"\n  ]\n\n  private readonly notifier: NotifierService;\n\n  constructor(private chamadoService: ChamadoService, private atendimentoService: AtendimentoService, private notifierService: NotifierService) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n    this.carregarCombos();\n    this.buscar();\n  }\n\n  carregarCombos() {\n    this.chamadoService.carregarCombos().then((combos) => {\n      this.tiposAtendimento = combos.tiposAtendimento;\n      this.empresas = combos.empresas;\n      this.tecnicos = combos.tecnicos;\n    })\n  }\n\n  buscar() {\n\n    this.atendimentoService.buscar(this.filtro).then((atendimentos) => {\n      this.atendimentos = atendimentos;\n\n      if (atendimentos.length > 0) {\n        atendimentos.forEach((item, i) => {\n          item.fgChecked = false;\n        })\n      }\n\n      console.log(atendimentos);\n    })\n\n  }\n\n  limpar() {\n    this.filtro = {\n      cdAtendimento: null,\n      nmEmpresa: null,\n      cdTipoAtendimento: null,\n      dtFiltroDe: null,\n      dtFiltroAte: null,\n      cdLoginTecnico: null,\n      dtFiltroAtendimentoDe: null,\n      dtFiltroAtendimentoAte: null,\n      stStatus: \"atendimento_pendente_confirmacao\"\n    }\n  }\n\n  confirmarSelecionados() {\n\n    var success = false;\n\n    if (this.atendimentos.length > 0) {\n      this.atendimentos.forEach((item, i) => {\n        if (item.fgChecked) {\n          this.atendimentoService.confirmar(item.cdAtendimento).then((results) => {\n            console.log(results);\n            success = true;\n            this.buscar();\n          })\n        }\n      })\n\n      if (success) {\n        this.notifier.notify(\"success\", \"Atendimentos confirmado com sucesso!\");\n\n      }\n    }\n  }\n\n  exportarDados() {\n\n    let data = this.atendimentos;\n    let filename = \"atendimentos\";\n\n    if(data.length > 0){\n      let csvData = this.convertToCSV(data, ['cdAtendimento','dtCriacao', 'dtAtendimento', 'nmEmpresa', 'nmUnidade', 'dsTipoAtendimento','tecnicos','dsUserChamado', 'dsUserAtendimento', 'stStatus']);\n      console.log(csvData)\n      let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n      let dwldLink = document.createElement(\"a\");\n      let url = URL.createObjectURL(blob);\n      let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n      if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n          dwldLink.setAttribute(\"target\", \"_blank\");\n      }\n      dwldLink.setAttribute(\"href\", url);\n      dwldLink.setAttribute(\"download\", filename + \".csv\");\n      dwldLink.style.visibility = \"hidden\";\n      document.body.appendChild(dwldLink);\n      dwldLink.click();\n      document.body.removeChild(dwldLink);\n    }\n\n    \n}\n\nconvertToCSV(objArray, headerList) {\n     let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n     let str = '';\n     let row = '-,';\n\n     for (let index in headerList) {\n         row += headerList[index] + ',';\n     }\n     row = row.slice(0, -1);\n     str += row + '\\r\\n';\n     for (let i = 0; i < array.length; i++) {\n         let line = (i+1)+'';\n         for (let index in headerList) {\n            let head = headerList[index];\n\n             line += ',' + array[i][head];\n         }\n         str += line + '\\r\\n';\n     }\n     return str;\n }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXRlbmRpbWVudG8vYXRlbmRpbWVudG8tZGV0YWxoZS9hdGVuZGltZW50by1kZXRhbGhlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvYXRlbmRpbWVudG8vYXRlbmRpbWVudG8tZGV0YWxoZS9hdGVuZGltZW50by1kZXRhbGhlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXRoZW1le1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZjM1M2I7IFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyZjM1M2I7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWU6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cblxuICAuYnRuLXRoZW1lOmVuYWJsZWR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjRmNWE7XG4gICAgYm9yZGVyLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBcbiAgLmJ0bi10aGVtZS1zZWNvbmRhcnk6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTQ2MTtcbiAgICBib3JkZXItY29sb3I6ICM0MTU0NjE7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChamadoService } from 'app/services/chamado.service';\nimport { ClienteService } from 'app/services/cliente.service';\nimport { TipoAtendimento } from 'app/commons/enum/tipoAtendimento';\nimport { AtendimentoService } from 'app/services/atendimento.service';\n\n@Component({\n  selector: 'app-atendimento-detalhe',\n  templateUrl: './atendimento-detalhe.component.html',\n  styleUrls: ['./atendimento-detalhe.component.css']\n})\nexport class AtendimentoDetalheComponent implements OnInit {\n\n  cdCliente = null;\n  chamadoFormSubmitted = false;\n  cdEmpresa = null;\n  cdAtendimento = null;\n\n  tiposAtendimento = [];\n  empresas = [];\n  unidades = [];\n  tecnicos = [];\n\n\n  form: any = {\n    cdEmpresa: null,\n    cdUnidade: null,\n    cdTipoAtendimento: null,\n    equipamentos: [],\n    tecnicos: []\n  }\n\n  equipamento: any = {\n    dsEquipamento: null,\n    dsTipo: null,\n    fgAtivo: true\n  }\n\n  tecnico: any = null;\n\n  tiposEquipamento = [\n    \"GMG\", \"Nobreak\", \"Infraestrutura\"\n  ]\n\n\n  private readonly notifier: NotifierService;\n\n  constructor(public chamadoService: ChamadoService, public notifierService: NotifierService, public route: ActivatedRoute, public clienteService: ClienteService, public atendimentoService: AtendimentoService) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n\n    this.carregarCombos().then((combos) => {\n      this.route.queryParams.subscribe(params => {\n        if (params['cdAtendimento']) {\n          this.cdAtendimento = params['cdAtendimento'];\n          this.form.cdAtendimento = parseInt(params['cdAtendimento']);\n          this.carregarUnidades();\n          this.detalhar();\n        }\n      })\n    })\n\n\n\n  }\n\n  carregarCombos() {\n\n    return new Promise((resolve, reject) => {\n      this.chamadoService.carregarCombos().then((combos) => {\n        resolve(combos);\n        console.log(combos);\n        this.tiposAtendimento = combos.tiposAtendimento;\n        this.empresas = combos.empresas;\n        this.tecnicos = combos.tecnicos;\n      }).catch((fail) => {\n        console.log(fail);\n        reject(fail);\n      })\n    })\n\n\n  }\n\n\n  carregarUnidades() {\n    this.clienteService.carregarUnidades(this.form.cdEmpresa).then((unidades) => {\n      console.log(unidades);\n      this.unidades = unidades;\n      if (this.unidades.length == 1) {\n        this.form.cdUnidade = unidades[0].cdUnidade;\n      }\n      console.log(this.form)\n    })\n  }\n\n\n  addEquipamento() {\n\n    if (this.form.equipamentos) {\n\n      if (this.equipamento) {\n        let equipamento = {\n          dsEquipamento: this.equipamento.dsEquipamento,\n          dsTipo: this.equipamento.dsTipo,\n          fgAtivo: this.equipamento.fgAtivo\n        }\n        this.form.equipamentos.push(equipamento);\n      }\n\n    }\n\n  }\n\n  addTecnico() {\n\n    let hasFound = false;\n\n    if (this.form.tecnicos) {\n      if (this.tecnico) {\n        if (this.form.tecnicos.length > 0) {\n          this.form.tecnicos.forEach((item, i) => {\n            if (item.cdLogin == this.tecnico.cdLogin) {\n              hasFound = true;\n            }\n          })\n        }\n\n        if (!hasFound) {\n          this.form.tecnicos.push(this.tecnico);\n        }\n\n      }\n\n    }\n\n  }\n\n  carregarEquipamentos() {\n\n    if (!this.form.cdAtendimento) {\n\n      if (this.form.cdTipoAtendimento == TipoAtendimento.PREVENTIVA || this.form.cdTipoAtendimento == TipoAtendimento.PREVENTIVA_E_CORRETIVA) {\n        this.chamadoService.carregarEquipamentos(this.form.cdUnidade).then((equipamentos) => {\n\n          this.form.equipamentos = [];\n\n          if (equipamentos.length > 0) {\n            equipamentos.forEach((item, i) => {\n              let equip = {\n                dsEquipamento: item.dsEquipamento,\n                dsTipo: item.dsTipo,\n                fgAtivo: true\n              }\n              this.form.equipamentos.push(equip);\n            })\n          }\n        })\n      }\n    }\n\n  }\n\n  deletarEquipamento(i) {\n    this.form.equipamentos.splice(i, 1);\n  }\n\n  salvar() {\n\n    this.chamadoFormSubmitted = true;\n\n    if (\n      this.form.cdEmpresa && this.form.cdUnidade && this.form.cdTipoAtendimento && this.form.dsDescricao && this.form.equipamentos.length > 0 && this.form.tecnicos.length > 0 && this.form.dtAtendimento && this.form.hrAtendimento\n    ) {\n\n      console.log(this.form);\n\n      this.atendimentoService.salvar(this.form).then((results) => {\n\n        if (results) {\n          this.form.cdAtendimento = results.cdAtendimento;\n        }\n\n        this.notifier.notify(\"success\", \"Dados salvos com sucesso.\");\n      })\n    }\n    else {\n      this.notifier.notify(\"error\", \"Há campos de preenchimento obrigatório em branco\");\n    }\n\n  }\n\n  detalhar() {\n    this.chamadoService.detalhar(this.cdAtendimento).then((chamado) => {\n      this.form = chamado;\n\n      if (!chamado.dtAtendimento) {\n        this.form.dtAtendimento = null;\n      }\n\n      if (!chamado.tecnicos) {\n        this.form.tecnicos = [];\n      }\n\n      this.carregarUnidades();\n    })\n  }\n\n  confirmarAtendimento() {\n\n    this.chamadoFormSubmitted = true;\n\n    if (\n      this.form.cdEmpresa && this.form.cdUnidade && this.form.cdTipoAtendimento && this.form.dsDescricao && this.form.equipamentos.length > 0 && this.form.tecnicos.length > 0 && this.form.dtAtendimento && this.form.hrAtendimento\n    ) {\n\n      console.log(this.form);\n\n      this.atendimentoService.salvar(this.form).then((results) => {\n\n        if (results) {\n          this.form.cdAtendimento = results.cdAtendimento;\n        }\n\n        // this.notifier.notify(\"success\", \"Dados salvos com sucesso.\");\n\n        this.atendimentoService.confirmar(this.form.cdAtendimento).then((results) => {\n          this.notifier.notify(\"success\", \"Atendimento confirmado com sucesso!\");\n          this.detalhar();\n        })\n\n      })\n    }\n    else {\n      this.notifier.notify(\"error\", \"Há campos de preenchimento obrigatório em branco\");\n    }\n\n  }\n\n  removerTecnico(i) {\n    this.form.tecnicos.splice(i, 1);\n  }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhbWFkby9jaGFtYWRvLWNvbnN1bHRhL2NoYW1hZG8tY29uc3VsdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9jaGFtYWRvL2NoYW1hZG8tY29uc3VsdGEvY2hhbWFkby1jb25zdWx0YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi10aGVtZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNTNiOyBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMmYzNTNiO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lOmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG5cbiAgLmJ0bi10aGVtZTplbmFibGVke1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lLXNlY29uZGFyeXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGJvcmRlci1jb2xvcjogIzNmNGY1YTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5OmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MTU0NjE7XG4gICAgYm9yZGVyLWNvbG9yOiAjNDE1NDYxO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ChamadoService } from 'app/services/chamado.service';\n\n@Component({\n  selector: 'app-chamado-consulta',\n  templateUrl: './chamado-consulta.component.html',\n  styleUrls: ['./chamado-consulta.component.css']\n})\nexport class ChamadoConsultaComponent implements OnInit {\n\n\n  public page = 1;\n  public pageSize = 10;\n\n  filtro: any = {\n    cdAtendimento: null,\n    nmEmpresa: null,\n    cdTipoAtendimento: null,\n    dtFiltroDe: null,\n    dtFiltroAte: null\n  }\n\n  chamados: any = [];\n  empresas: any = [];\n  unidades: any = [];\n  tiposAtendimento: any = [];\n\n  constructor(private chamadoService: ChamadoService) { }\n\n  ngOnInit(): void {\n    this.carregarCombos();\n    this.buscar();\n  }\n\n  carregarCombos() {\n    this.chamadoService.carregarCombos().then((combos) => {\n      this.tiposAtendimento = combos.tiposAtendimento;\n      this.empresas = combos.empresas;\n    })\n  }\n\n  buscar() {\n\n    this.chamadoService.buscar(this.filtro).then((results) => {\n      this.chamados = results;\n      console.log(results);\n    })\n\n  }\n\n  limpar() {\n    this.filtro = {\n      cdAtendimento: null,\n      nmEmpresa: null,\n      cdTipoAtendimento: null,\n      dtFiltroDe: null,\n      dtFiltroAte: null\n    }\n  }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhbWFkby9jaGFtYWRvLWRldGFsaGUvY2hhbWFkby1kZXRhbGhlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvY2hhbWFkby9jaGFtYWRvLWRldGFsaGUvY2hhbWFkby1kZXRhbGhlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXRoZW1le1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZjM1M2I7IFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyZjM1M2I7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWU6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cblxuICAuYnRuLXRoZW1lOmVuYWJsZWR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjRmNWE7XG4gICAgYm9yZGVyLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBcbiAgLmJ0bi10aGVtZS1zZWNvbmRhcnk6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTQ2MTtcbiAgICBib3JkZXItY29sb3I6ICM0MTU0NjE7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport * as uuid from 'uuid';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ChamadoService } from 'app/services/chamado.service';\nimport { ClienteService } from 'app/services/cliente.service';\nimport { TipoAtendimento } from 'app/commons/enum/tipoAtendimento';\n// import * as $ from 'jquery';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-chamado-detalhe',\n  templateUrl: './chamado-detalhe.component.html',\n  styleUrls: ['./chamado-detalhe.component.css']\n})\nexport class ChamadoDetalheComponent implements OnInit {\n\n  cdCliente = null;\n  chamadoFormSubmitted = false;\n  cdEmpresa = null;\n  cdAtendimento = null;\n\n  tiposAtendimento = [];\n  empresas = [];\n  unidades = [];\n\n\n  form: any = {\n    cdEmpresa: null,\n    cdUnidade: null,\n    cdTipoAtendimento: null,\n    equipamentos: []\n  }\n\n  equipamento: any = {\n    dsEquipamento: null,\n    dsTipo: null,\n    fgAtivo: true\n  }\n\n  tiposEquipamento = [\n    \"GMG\", \"Nobreak\", \"Infraestrutura\"\n  ]\n\n  private readonly notifier: NotifierService;\n\n  constructor(public chamadoService: ChamadoService, public notifierService: NotifierService, public route: ActivatedRoute, public clienteService: ClienteService) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n\n    this.carregarCombos().then((combos) => {\n      this.route.queryParams.subscribe(params => {\n        if (params['cdEmpresa']) {\n          this.cdEmpresa = params['cdEmpresa'];\n          this.form.cdEmpresa = parseInt(params['cdEmpresa']);\n          this.carregarUnidades();\n          // this.detalhar();\n        }\n        if (params['cdAtendimento']) {\n          this.cdAtendimento = params['cdAtendimento'];\n          this.form.cdAtendimento = parseInt(params['cdAtendimento']);\n          this.carregarUnidades();\n          this.detalhar();\n        }\n      })\n    })\n\n\n\n  }\n\n  carregarCombos() {\n\n    return new Promise((resolve, reject) => {\n      this.chamadoService.carregarCombos().then((combos) => {\n        resolve(combos);\n        console.log(combos);\n        this.tiposAtendimento = combos.tiposAtendimento;\n        this.empresas = combos.empresas;\n      }).catch((fail) => {\n        console.log(fail);\n        reject(fail);\n      })\n    })\n\n\n  }\n\n\n  carregarUnidades() {\n    this.clienteService.carregarUnidades(this.form.cdEmpresa).then((unidades) => {\n      console.log(unidades);\n      this.unidades = unidades;\n      if (this.unidades.length == 1) {\n        this.form.cdUnidade = unidades[0].cdUnidade;\n      }\n      console.log(this.form)\n    })\n  }\n\n\n  addEquipamento() {\n\n    if (this.form.equipamentos) {\n\n      if (this.equipamento) {\n        let equipamento = {\n          dsEquipamento: this.equipamento.dsEquipamento,\n          dsTipo: this.equipamento.dsTipo,\n          fgAtivo: this.equipamento.fgAtivo\n        }\n        this.form.equipamentos.push(equipamento);\n      }\n\n    }\n\n  }\n\n  carregarEquipamentos() {\n\n    if (!this.form.cdAtendimento) {\n\n      if (this.form.cdTipoAtendimento == TipoAtendimento.PREVENTIVA || this.form.cdTipoAtendimento == TipoAtendimento.PREVENTIVA_E_CORRETIVA) {\n        this.chamadoService.carregarEquipamentos(this.form.cdUnidade).then((equipamentos) => {\n\n          this.form.equipamentos = [];\n\n          if (equipamentos.length > 0) {\n            equipamentos.forEach((item, i) => {\n              let equip = {\n                dsEquipamento: item.dsEquipamento,\n                dsTipo: item.dsTipo,\n                fgAtivo: true\n              }\n              this.form.equipamentos.push(equip);\n            })\n          }\n        })\n      }\n    }\n\n  }\n\n  deletarEquipamento(i) {\n    this.form.equipamentos.splice(i, 1);\n  }\n\n  salvar() {\n\n    this.chamadoFormSubmitted = true;\n\n    if (\n      this.form.cdEmpresa && this.form.cdUnidade && this.form.cdTipoAtendimento && this.form.dsDescricao && this.form.equipamentos.length > 0\n    ) {\n\n      console.log(this.form);\n\n      this.chamadoService.salvar(this.form).then((results) => {\n\n        if (results) {\n          this.form.cdAtendimento = results.cdAtendimento;\n        }\n\n        this.notifier.notify(\"success\", \"Dados salvos com sucesso.\");\n      })\n    }\n    else {\n      this.notifier.notify(\"error\", \"Há campos de preenchimento obrigatório em branco\");\n    }\n\n  }\n\n  detalhar() {\n    this.chamadoService.detalhar(this.cdAtendimento).then((chamado) => {\n      this.form = chamado;\n      this.carregarUnidades();\n    })\n  }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50ZS9jbGllbnRlLWNvbnN1bHRhL2NsaWVudGUtY29uc3VsdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9jbGllbnRlL2NsaWVudGUtY29uc3VsdGEvY2xpZW50ZS1jb25zdWx0YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi10aGVtZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNTNiOyBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMmYzNTNiO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lOmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG5cbiAgLmJ0bi10aGVtZTplbmFibGVke1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmU7ICBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjMjQyOTJlO1xuICB9XG4gIFxuICAuYnRuLXRoZW1lLXNlY29uZGFyeXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGJvcmRlci1jb2xvcjogIzNmNGY1YTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5OmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MTU0NjE7XG4gICAgYm9yZGVyLWNvbG9yOiAjNDE1NDYxO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ClienteService } from 'app/services/cliente.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-cliente-consulta',\n  templateUrl: './cliente-consulta.component.html',\n  styleUrls: ['./cliente-consulta.component.css']\n})\nexport class ClienteConsultaComponent implements OnInit {\n  \n  clientes:any = [];\n  public page = 1;\n  public pageSize = 10;\n\n  filtro: any = {\n    nmEmpresa: null,\n    nrDocumento: null\n  }\n\n\n  constructor(public clienteService: ClienteService) { }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n  buscar() {\n\n    this.clienteService.buscar(this.filtro).then((results) => {\n      this.clientes = results;\n      console.log(results);\n    })\n\n  }\n\n}\n","export default \".btn-theme{\\n    background-color: #2f353b; \\n    color: white;\\n    border-color: #2f353b;\\n  }\\n  \\n  .btn-theme:hover{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme:enabled{\\n    background-color: #24292e;  \\n    color: white;\\n    border-color: #24292e;\\n  }\\n  \\n  .btn-theme-secondary{\\n    background-color: #3f4f5a;\\n    border-color: #3f4f5a;\\n    color: white;\\n  }\\n  \\n  .btn-theme-secondary:hover{\\n    background-color: #415461;\\n    border-color: #415461;\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50ZS9jbGllbnRlLWRldGFsaGUvY2xpZW50ZS1kZXRhbGhlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIscUJBQXFCO0lBQ3JCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50ZS9jbGllbnRlLWRldGFsaGUvY2xpZW50ZS1kZXRhbGhlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXRoZW1le1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZjM1M2I7IFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyZjM1M2I7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWU6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cblxuICAuYnRuLXRoZW1lOmVuYWJsZWR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZTsgIFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItY29sb3I6ICMyNDI5MmU7XG4gIH1cbiAgXG4gIC5idG4tdGhlbWUtc2Vjb25kYXJ5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjRmNWE7XG4gICAgYm9yZGVyLWNvbG9yOiAjM2Y0ZjVhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBcbiAgLmJ0bi10aGVtZS1zZWNvbmRhcnk6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTQ2MTtcbiAgICBib3JkZXItY29sb3I6ICM0MTU0NjE7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { ClienteService } from 'app/services/cliente.service';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as uuid from 'uuid';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AtendimentoService } from 'app/services/atendimento.service';\n// import * as $ from 'jquery';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-cliente-detalhe',\n  templateUrl: './cliente-detalhe.component.html',\n  styleUrls: ['./cliente-detalhe.component.css']\n})\nexport class ClienteDetalheComponent implements OnInit {\n\n  cdCliente = null;\n  empresaFormSubmitted = false;\n\n  form: any = {\n    nmEmpresa: null,\n    nrDocumento: null,\n    nrInscricaoEstadual: null,\n    nrCep: null,\n    nmRua: null,\n    nrNumero: null,\n    dsComplemento: null,\n    nmBairro: null,\n    nmEstado: null,\n    nmCidade: null,\n    unidades: []\n  }\n\n  item: any = {\n    nmUnidade: null,\n    nrCep: null,\n    nmRua: null,\n    nrNumero: null,\n    dsComplemento: null,\n    nmBairro: null,\n    nmEstado: null,\n    nmCidade: null,\n    nmContatoCli: null,\n    nrTelefone: null,\n    nrCelular: null,\n    fgClienteContrato: false,\n    nrDuracaoContrato: null,\n    dtInicioContrato: null,\n    nrDiaPrevisto: null,\n    tecnicoPrevisto: null,\n    fgAtivo: true,\n    equipamentos: []\n  }\n\n  equipamento: any = {\n    dsEquipamento: null,\n    dsTipo: null,\n    fgAtivo: true\n  }\n\n  tiposEquipamento = [\n    \"GMG\", \"Nobreak\", \"Infraestrutura\"\n  ]\n\n\n  tecnicos = [];\n\n  closeResult: any = '';\n\n  private readonly notifier: NotifierService;\n\n  constructor(public clienteService: ClienteService, public notifierService: NotifierService, public modalService: NgbModal, public route: ActivatedRoute, public atendimentoService: AtendimentoService) {\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n\n    this.carregarCombos();\n\n    this.route.queryParams.subscribe(params => {\n      if (params['cdCliente']) {\n        this.cdCliente = params['cdCliente'];\n        this.detalhar();\n      }\n    })\n\n  }\n\n  carregarEnderecoEmpresaByCep() {\n\n    if (this.form.nrCep) {\n      this.clienteService.carregarEndereco(this.form.nrCep).then((results) => {\n        console.log(results);\n        if (results.erro) {\n          this.notifier.notify(\"error\", \"O CEP inserido é inválido\");\n        }\n        else {\n          if (results.logradouro) {\n            this.form.nmRua = results.logradouro;\n          }\n          if (results.bairro) {\n            this.form.nmBairro = results.bairro;\n          }\n\n          if (results.uf) {\n            this.form.nmEstado = results.uf;\n          }\n\n          if (results.localidade) {\n            this.form.nmCidade = results.localidade;\n          }\n        }\n\n      })\n    }\n  }\n\n  carregarEnderecoUnidadeByCep() {\n\n    if (this.item.nrCep) {\n\n      this.clienteService.carregarEndereco(this.item.nrCep).then((results) => {\n        console.log(results);\n        if (results.erro) {\n          this.notifier.notify(\"error\", \"O CEP inserido é inválido\");\n        }\n        else {\n          if (results.logradouro) {\n            this.item.nmRua = results.logradouro;\n          }\n          if (results.bairro) {\n            this.item.nmBairro = results.bairro;\n          }\n\n          if (results.uf) {\n            this.item.nmEstado = results.uf;\n          }\n\n          if (results.localidade) {\n            this.item.nmCidade = results.localidade;\n          }\n        }\n\n      })\n    }\n  }\n\n  carregarCombos() {\n    this.clienteService.carregarCombos().then((combos) => {\n      console.log(combos);\n      this.tecnicos = combos.tecnicos;\n    })\n  }\n\n  openModalDetalheEndereco() {\n\n\n  }\n\n  openModalDetalheUnidade() {\n\n  }\n\n  addUnidade() {\n\n    const id = uuid.v4();\n\n    this.item = {\n      nmUnidade: null,\n      nrCep: null,\n      nmRua: null,\n      nrNumero: null,\n      dsComplemento: null,\n      nmBairro: null,\n      nmEstado: null,\n      nmCidade: null,\n      nmContatoCli: null,\n      nrTelefone: null,\n      nrCelular: null,\n      fgClienteContrato: false,\n      nrDuracaoContrato: null,\n      nrDiaPrevisto: null,\n      tecnicoPrevisto: null,\n      fgAtivo: true,\n      equipamentos: [],\n      uuid: id\n    }\n\n  }\n\n  addEquipamento(item) {\n\n    if (item.equipamentos) {\n\n      if (this.equipamento) {\n        let equipamento = {\n          dsEquipamento: this.equipamento.dsEquipamento,\n          dsTipo: this.equipamento.dsTipo,\n          fgAtivo: this.equipamento.fgAtivo\n        }\n        item.equipamentos.push(equipamento);\n      }\n\n    }\n\n  }\n\n  salvarUnidade() {\n    if (this.item) {\n\n      if (this.form.unidades.length > 0) {\n\n        let foundItem = false;\n\n        this.form.unidades.forEach((item, i) => {\n          if (item.uuid && this.item.uuid) {\n\n            if (item.uuid == this.item.uuid) {\n\n              foundItem = true;\n\n              item.nmUnidade = this.item.nmUnidade;\n              item.nrCep = this.item.nrCep;\n              item.nmRua = this.item.nmRua;\n              item.nrNumero = this.item.nrNumero\n              item.dsComplemento = this.item.dsComplemento\n              item.nmBairro = this.item.nmBairro\n              item.nmEstado = this.item.nmEstado\n              item.nmCidade = this.item.nmCidade\n              item.nmContatoCli = this.item.nmContatoCli\n              item.nrTelefone = this.item.nrTelefone\n              item.nrCelular = this.item.nrCelular\n              item.fgClienteContrato = this.item.fgClienteContrato\n              item.nrDuracaoContrato = this.item.nrDuracaoContrato\n              item.nrDiaPrevisto = this.item.nrDiaPrevisto\n              item.tecnicoPrevisto = this.item.tecnicoPrevisto\n              item.fgAtivo = this.item.fgAtivo\n              item.equipamentos = this.item.equipamentos;\n            }\n\n          }\n\n          else {\n            if (item.cdUnidade == this.item.cdUnidade) {\n              foundItem = true;\n\n              item.nmUnidade = this.item.nmUnidade;\n              item.nrCep = this.item.nrCep;\n              item.nmRua = this.item.nmRua;\n              item.nrNumero = this.item.nrNumero\n              item.dsComplemento = this.item.dsComplemento\n              item.nmBairro = this.item.nmBairro\n              item.nmEstado = this.item.nmEstado\n              item.nmCidade = this.item.nmCidade\n              item.nmContatoCli = this.item.nmContatoCli\n              item.nrTelefone = this.item.nrTelefone\n              item.nrCelular = this.item.nrCelular\n              item.fgClienteContrato = this.item.fgClienteContrato\n              item.nrDuracaoContrato = this.item.nrDuracaoContrato\n              item.nrDiaPrevisto = this.item.nrDiaPrevisto\n              item.tecnicoPrevisto = this.item.tecnicoPrevisto\n              item.fgAtivo = this.item.fgAtivo\n              item.equipamentos = this.item.equipamentos;\n            }\n          }\n\n        })\n\n        if (!foundItem) {\n          this.form.unidades.push(this.item);\n        }\n\n      } else {\n        this.form.unidades.push(this.item);\n      }\n\n      $(\"#modalDetalheUnidade\").modal(\"hide\");\n    }\n  }\n\n  editarUnidade(u) {\n    this.item = u;\n  }\n\n  removerUnidade(index) {\n    this.form.unidades.splice(index, 1);\n  }\n\n  removerEquipamento(item, index) {\n    item.equipamentos.splice(index, 1);\n  }\n\n  salvar() {\n\n    this.empresaFormSubmitted = true;\n\n    if (\n      this.form.nmEmpresa && this.form.nrDocumento && this.form.nrCep\n      && this.form.nmRua && this.form.nrNumero && this.form.nmBairro\n      && this.form.nmCidade && this.form.nmEstado\n\n    ) {\n\n      this.clienteService.salvar(this.form).then((results) => {\n\n        if (results) {\n          this.form.cdEmpresa = results.cdEmpresa;\n        }\n\n        this.notifier.notify(\"success\", \"Dados salvos com sucesso.\");\n      })\n    }\n    else {\n      this.notifier.notify(\"error\", \"Há campos de preenchimento obrigatório em branco\");\n    }\n\n\n  }\n\n  detalhar() {\n    this.clienteService.detalhar(this.cdCliente).then((empresa) => {\n      this.form = empresa;\n      console.log(empresa);\n    })\n  }\n\n  inativarUnidade(unidade) {\n    this.clienteService.mudarStatusUnidade(unidade.cdUnidade, 0).then((results) => {\n      this.detalhar();\n      console.log(results);\n    })\n  }\n\n  reativarUnidade(unidade) {\n    this.clienteService.mudarStatusUnidade(unidade.cdUnidade, 1).then((results) => {\n      this.detalhar();\n      console.log(results);\n    })\n  }\n\n  gerarAtendimentosContrato(unidade) {\n\n    this.empresaFormSubmitted = true;\n\n    if (\n      this.form.nmEmpresa && this.form.nrDocumento && this.form.nrCep\n      && this.form.nmRua && this.form.nrNumero && this.form.nmBairro\n      && this.form.nmCidade && this.form.nmEstado\n\n    ) {\n\n      this.clienteService.salvar(this.form).then((results) => {\n\n        if (results) {\n          this.form.cdEmpresa = results.cdEmpresa;\n        }\n\n        this.atendimentoService.gerarAtendimentosContrato(unidade.cdUnidade).then((results) => {\n          this.notifier.notify(\"success\", \"Atendimentos gerados com sucesso.\");\n        })\n\n        // this.notifier.notify(\"success\", \"Dados salvos com sucesso.\");\n      })\n    }\n    else {\n      this.notifier.notify(\"error\", \"Há campos de preenchimento obrigatório em branco\");\n    }\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n    constructor(private auth: AuthService, private router: Router) {\n    }\n\n    async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n        let user = await this.auth.getUser();\n\n        if (user) {\n            // logged in so return true\n            return true;\n        }\n\n        // redireciona para o login para realizar a autenticacao\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        // this.alertService.presentAlert('Atenção', 'Você precisa estar logado para acessar esse conteúdo.');\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from 'environments/environment';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n/**\n * Intercepta todas as requisicoes HTTP, adiciona cabecalhos default e realiza logica de autenticacao\n */\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) {\n    }\n\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n            return this.authService.getUserAsObservable()\n                .pipe(\n                    mergeMap((user: any) => {\n                        if (user && user.dsToken && req.url.split('/')[2] == environment.API_ENDPOINT.split('/')[2]) {\n                            req = req.clone({\n                                setHeaders: {\n                                    Authorization: `${user.dsToken}`\n                                }\n                            });\n                        }\n                        return next.handle(req);\n                    }\n                    )\n                ).pipe(\n                    catchError((error: HttpErrorResponse) => {\n                        let errorMessage = '';\n                        if (error.error instanceof ErrorEvent) {\n                            // client-side error\n                            errorMessage = `Error: ${error.error.message}`;\n                        } else {\n                            // server-side error\n                            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n                        }\n \n                        console.log(errorMessage);\n\n                        return throwError(error);\n                    })\n                )\n                ;\n        \n\n    }\n\n\n}\n","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminLayoutComponent } from 'app/layouts/admin-layout/admin-layout.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FooterModule } from 'app/shared/footer/footer.module';\nimport { NavbarModule } from 'app/shared/navbar/navbar.module';\nimport { SidebarModule } from 'app/sidebar/sidebar.module';\nimport { AuthInterceptor } from './auth.interceptor';\n\n\n\n@NgModule({\n  imports: [\n    \n  ],\n  declarations: [],\n  providers: [\n   \n  ],\n})\nexport class CommonsModule { }\n","export enum TipoAtendimento {\n    ATENDIMENTO_EMERGENCIAL = 1,\n    CORRETIVA = 2,\n    PREVENTIVA = 3,\n    PREVENTIVA_E_CORRETIVA = 4,\n    VISITA_TECNICA = 5,\n    OUTROS = 6\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {    \n\n\n\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\nimport 'rxjs/add/operator/filter';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n  private _router: Subscription;\n  private lastPoppedUrl: string;\n  private yScrollStack: number[] = [];\n\n  constructor( public location: Location, private router: Router) {}\n\n  ngOnInit() {\n    console.log(this.router)\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n\n      if (isWindows) {\n          // if we are on windows OS we activate the perfectScrollbar function\n\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\n      } else {\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\n      }\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\n\n      this.location.subscribe((ev:PopStateEvent) => {\n          this.lastPoppedUrl = ev.url;\n      });\n       this.router.events.subscribe((event:any) => {\n          if (event instanceof NavigationStart) {\n             if (event.url != this.lastPoppedUrl)\n                 this.yScrollStack.push(window.scrollY);\n         } else if (event instanceof NavigationEnd) {\n             if (event.url == this.lastPoppedUrl) {\n                 this.lastPoppedUrl = undefined;\n                 window.scrollTo(0, this.yScrollStack.pop());\n             } else\n                 window.scrollTo(0, 0);\n         }\n      });\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\n           elemMainPanel.scrollTop = 0;\n           elemSidebar.scrollTop = 0;\n      });\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n          let ps = new PerfectScrollbar(elemMainPanel);\n          ps = new PerfectScrollbar(elemSidebar);\n      }\n  }\n  ngAfterViewInit() {\n      this.runOnRouteChange();\n  }\n  isMap(path){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      titlee = titlee.slice( 1 );\n      if(path == titlee){\n          return false;\n      }\n      else {\n          return true;\n      }\n  }\n  runOnRouteChange(): void {\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      const ps = new PerfectScrollbar(elemMainPanel);\n      ps.update();\n    }\n  }\n  isMac(): boolean {\n      let bool = false;\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n          bool = true;\n      }\n      return bool;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { LbdModule } from '../../lbd/lbd.module';\nimport { NguiMapModule} from '@ngui/map';\n\nimport { AdminLayoutRoutes } from './admin-layout.routing';\n\nimport { HomeComponent } from '../../home/home.component';\nimport { ClienteConsultaComponent } from 'app/cliente/cliente-consulta/cliente-consulta.component';\nimport { ClienteDetalheComponent } from 'app/cliente/cliente-detalhe/cliente-detalhe.component';\n// import { IConfig } from 'ngx-mask/lib/config';\nimport { NgxMaskModule } from 'ngx-mask'\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport { ChamadoConsultaComponent } from 'app/chamado/chamado-consulta/chamado-consulta.component';\nimport { ChamadoDetalheComponent } from 'app/chamado/chamado-detalhe/chamado-detalhe.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { AtendimentoConsultaComponent } from 'app/atendimento/atendimento-consulta/atendimento-consulta.component';\nimport { AtendimentoDetalheComponent } from 'app/atendimento/atendimento-detalhe/atendimento-detalhe.component';\n\n// export let options: Partial<IConfig> | (() => Partial<IConfig>) = null;\n\n@NgModule({\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'pt-BR' }],\n  imports: [\n    CommonModule,\n    NgbModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    ReactiveFormsModule, \n    FormsModule,\n    LbdModule,\n    NguiMapModule.forRoot({apiUrl: 'https://maps.google.com/maps/api/js?key=YOUR_KEY_HERE'}),\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    NgxMaskModule.forRoot(),\n    NgbModule,\n    NgxSpinnerModule,\n    MatSelectModule,\n    MatAutocompleteModule\n    \n  ],\n  declarations: [\n    HomeComponent,\n    ClienteConsultaComponent,\n    ClienteDetalheComponent,\n    ChamadoConsultaComponent,\n    ChamadoDetalheComponent,\n    AtendimentoConsultaComponent,\n    AtendimentoDetalheComponent\n  ]\n})\n\nexport class AdminLayoutModule {}\n","import { Routes } from '@angular/router';\nimport { AtendimentoConsultaComponent } from 'app/atendimento/atendimento-consulta/atendimento-consulta.component';\nimport { AtendimentoDetalheComponent } from 'app/atendimento/atendimento-detalhe/atendimento-detalhe.component';\nimport { ChamadoConsultaComponent } from 'app/chamado/chamado-consulta/chamado-consulta.component';\nimport { ChamadoDetalheComponent } from 'app/chamado/chamado-detalhe/chamado-detalhe.component';\nimport { ClienteConsultaComponent } from 'app/cliente/cliente-consulta/cliente-consulta.component';\nimport { ClienteDetalheComponent } from 'app/cliente/cliente-detalhe/cliente-detalhe.component';\nimport { AuthGuard } from 'app/commons/auth.guard';\nimport { LoginComponent } from 'app/login/login.component';\n\nimport { HomeComponent } from '../../home/home.component';\nimport { AuthService } from '../../services/auth.service';\n\nexport const AdminLayoutRoutes: Routes = [\n    { path: 'dashboard', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'cliente/consulta', component: ClienteConsultaComponent, canActivate: [AuthGuard] },\n    { path: 'cliente/detalhe', component: ClienteDetalheComponent, canActivate: [AuthGuard] },\n    { path: 'chamado/consulta', component: ChamadoConsultaComponent, canActivate: [AuthGuard] },\n    { path: 'chamado/detalhe', component: ChamadoDetalheComponent, canActivate: [AuthGuard] },\n    { path: 'atendimento/consulta', component: AtendimentoConsultaComponent, canActivate: [AuthGuard] },\n    { path: 'atendimento/detalhe', component: AtendimentoDetalheComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent }\n];\n","import {Component, Input, OnInit, AfterViewInit, ChangeDetectionStrategy} from '@angular/core';\nimport * as Chartist from 'chartist';\n\nexport interface LegendItem {\n  title: string;\n  imageClass: string;\n}\n\nexport enum ChartType {\n  Pie,\n  Line,\n  Bar\n}\n\n@Component({\n  selector: 'lbd-chart',\n  templateUrl: './lbd-chart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LbdChartComponent implements OnInit, AfterViewInit {\n  static currentId = 1;\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public subtitle: string;\n\n  @Input()\n  public chartClass: string;\n\n  @Input()\n  public chartType: ChartType;\n\n  @Input()\n  public chartData: any;\n\n  @Input()\n  public chartOptions: any;\n\n  @Input()\n  public chartResponsive: any[];\n\n  @Input()\n  public footerIconClass: string;\n\n  @Input()\n  public footerText: string;\n\n  @Input()\n  public legendItems: LegendItem[];\n\n  @Input()\n  public withHr: boolean;\n\n  public chartId: string;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.chartId = `lbd-chart-${LbdChartComponent.currentId++}`;\n  }\n\n  public ngAfterViewInit(): void {\n\n    switch (this.chartType) {\n      case ChartType.Pie:\n        new Chartist.Pie(`#${this.chartId}`, this.chartData, this.chartOptions, this.chartResponsive);\n        break;\n      case ChartType.Line:\n        new Chartist.Line(`#${this.chartId}`, this.chartData, this.chartOptions, this.chartResponsive);\n        break;\n      case ChartType.Bar:\n        new Chartist.Bar(`#${this.chartId}`, this.chartData, this.chartOptions, this.chartResponsive);\n        break;\n    }\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { LbdChartComponent } from './lbd-chart/lbd-chart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n\n    LbdChartComponent\n\n  ],\n  exports: [\n    LbdChartComponent\n  ]\n})\nexport class LbdModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'app/services/auth.service';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: any = {\n    dsUser: null,\n    dsPass: null\n  };\n\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n\n\n    // get return url from route parameters or default to '/'\n\n  }\n\n  // convenience getter for easy access to form fields\n  login() {\n\n    this.submitted = true;\n    this.authService.login(this.form.dsUser, this.form.dsPass).subscribe((results) => {\n      this.router.navigateByUrl(\"/dashboard\");\n    })\n\n  }\n\n  limpar() {\n    this.form = {\n      dsUser: null,\n      dsPass: null\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\nimport { NotifierService } from 'angular-notifier';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AtendimentoService {\n\n  private readonly notifier: NotifierService;\n\n  constructor(private httpClient: HttpClient, private notifierService: NotifierService, private spinner: NgxSpinnerService) {\n    this.notifier = notifierService;\n  }\n\n  salvar(form): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/atendimento/salvar\", form)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  buscar(filtro): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/atendimento/buscar\",filtro)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  confirmar(cdAtendimento): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/atendimento/confirmar/\" + cdAtendimento)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  gerarAtendimentosContrato(cdUnidade): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/atendimento/gerarAtendimentos/\" + cdUnidade)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  getAtendimentos(): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/atendimento\")\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { NotifierService } from 'angular-notifier';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    isAuthenticated = false;\n    private readonly notifier: NotifierService;\n\n    constructor(\n        private httpClient: HttpClient,\n        private notifierService: NotifierService,\n        private router: Router,\n        private spinner: NgxSpinnerService\n    ) {\n        this.notifier = notifierService;\n\n    }\n\n    checkToken() {\n        // token expirado?? tratar cenario, aqui ou no service\n        var data = JSON.parse(localStorage.getItem(USER_KEY));\n    }\n\n\n    login(username, password): Observable<any> {\n\n        this.spinner.show();\n\n        const body = {\n            dsUser: username,\n            dsPass: password\n        }\n\n        console.log(body);\n\n        return this.httpClient.post<any>(environment.API_ENDPOINT + '/auth',\n            body)\n            .pipe(\n                map(res => {\n\n                    this.spinner.hide();\n\n                    if (!res.hasError) {\n                        var user = res.data;\n                        console.log(user);\n                        localStorage.setItem(USER_KEY, JSON.stringify(user));\n                        this.isAuthenticated = true;\n                        return user;\n                    }\n                    else {\n                        // alert(res.erro);\n\n                        if (Object.entries(res.erro).length != 0) {\n                            this.notifier.notify(\"error\", res.erro);\n                            throw throwError(new Error(res.error));\n                        }\n                        else{\n                            this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n                            throw throwError(new Error(res.error));\n                        }\n\n\n                    }\n\n\n                })\n            );\n    }\n\n    logout() {\n        localStorage.clear();\n        this.router.navigateByUrl(\"/login\");\n    }\n\n    getUserAsObservable(): Observable<any> {\n        return from(this.getUser());\n    }\n\n    getUser(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            var key = JSON.parse(localStorage.getItem(USER_KEY));\n            if (key) {\n                resolve(key);\n            }\n            else {\n                resolve(null);\n            }\n        })\n    }\n\n    getPerfil(): Promise<any> {\n\n        return new Promise((resolve, reject) => {\n            var key = JSON.parse(localStorage.getItem(USER_KEY));\n\n            if (key) {\n                resolve(key.cdPerfil);\n            }\n            else {\n                reject(-1);\n            }\n        })\n\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\nimport { NotifierService } from 'angular-notifier';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChamadoService {\n\n  private readonly notifier: NotifierService;\n\n  constructor(private httpClient: HttpClient, private notifierService: NotifierService, private spinner: NgxSpinnerService) {\n    this.notifier = notifierService;\n  }\n\n  carregarCombos(): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/chamado/combosDetalhe\")\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  buscar(filtro): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/chamado/buscar\",filtro)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  carregarEquipamentos(cdUnidade): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/chamado/equipamentos/\" + cdUnidade)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  salvar(form): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/chamado/salvar\", form)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  detalhar(cdAtendimento): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/chamado/detalhar/\" + cdAtendimento)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\nimport { NotifierService } from 'angular-notifier';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private readonly notifier: NotifierService;\n\n  constructor(private httpClient: HttpClient, private notifierService: NotifierService, private spinner: NgxSpinnerService) {\n    this.notifier = notifierService;\n  }\n\n  carregarEndereco(cep): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n\n      this.httpClient.get<any>(environment.VIA_CEP_API_ENDPOINT + '/' + cep + \"/json\")\n        .subscribe((res) => {\n          this.spinner.hide();\n          resolve(res);\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n\n        });\n\n\n    }));\n  };\n\n  carregarCombos(): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/empresa/combos/detalhe\")\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  salvar(form): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/empresa/salvar\", form)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  buscar(filtro): Promise<any> {\n\n    this.spinner.show();\n    console.log(this.spinner);\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.post<any>(environment.API_ENDPOINT + \"/empresa/buscar\", filtro)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  detalhar(cdEmpresa): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/empresa/\" + cdEmpresa)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n  carregarUnidades(cdEmpresa): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/empresa/unidades/\" + cdEmpresa)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n\n  mudarStatusUnidade(cdUnidade,fgAtivo): Promise<any> {\n\n    this.spinner.show();\n\n    return new Promise(((resolve, reject) => {\n      this.httpClient.get<any>(environment.API_ENDPOINT + \"/empresa/alterarStatus/\" + cdUnidade + \"/\" + fgAtivo)\n        .subscribe((res) => {\n          this.spinner.hide();\n          if (!res.hasError) {\n            resolve(res.data);\n          }\n          else {\n            if (res.erro) {\n              this.notifier.notify(\"error\", res.erro);\n              reject(res.erro)\n            }\n            else {\n              this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n              reject(false);\n\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n          this.notifier.notify(\"error\", \"Ocorreu um erro inesperado, favor tentar novamente em alguns instantes.\");\n          reject(error);\n        });\n    }));\n  };\n\n\n}\n","import { Component } from '@angular/core';\n\ndeclare var $:any;\n\n@Component({\n    selector: 'footer-cmp',\n    templateUrl: 'footer.component.html'\n})\n\nexport class FooterComponent{\n    test : Date = new Date();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ FooterComponent ],\n    exports: [ FooterComponent ]\n})\n\nexport class FooterModule {}\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { ROUTES } from '../../sidebar/sidebar.component';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AuthService } from 'app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    // moduleId: module.id,\n    selector: 'navbar-cmp',\n    templateUrl: 'navbar.component.html'\n})\n\nexport class NavbarComponent implements OnInit {\n    private listTitles: any[];\n    location: Location;\n    private toggleButton: any;\n    private sidebarVisible: boolean;\n    private user = {\n        dsUser: \"\"\n    }\n\n    constructor(location: Location, private element: ElementRef, private auth: AuthService, private router:Router) {\n        this.location = location;\n        this.sidebarVisible = false;\n    }\n\n    ngOnInit() {\n        this.loadUser();\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\n        const navbar: HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n    }\n    sidebarOpen() {\n        const toggleButton = this.toggleButton;\n        const body = document.getElementsByTagName('body')[0];\n        setTimeout(function () {\n            toggleButton.classList.add('toggled');\n        }, 500);\n        body.classList.add('nav-open');\n\n        this.sidebarVisible = true;\n    };\n    sidebarClose() {\n        const body = document.getElementsByTagName('body')[0];\n        this.toggleButton.classList.remove('toggled');\n        this.sidebarVisible = false;\n        body.classList.remove('nav-open');\n    };\n    sidebarToggle() {\n        // const toggleButton = this.toggleButton;\n        // const body = document.getElementsByTagName('body')[0];\n        if (this.sidebarVisible === false) {\n            this.sidebarOpen();\n        } else {\n            this.sidebarClose();\n        }\n    };\n\n    getTitle() {\n        var titlee = this.location.prepareExternalUrl(this.location.path());\n        if (titlee.charAt(0) === '#') {\n            titlee = titlee.slice(1);\n        }\n\n        for (var item = 0; item < this.listTitles.length; item++) {\n            if (this.listTitles[item].path === titlee) {\n                return this.listTitles[item].title;\n            }\n        }\n        return 'Dashboard';\n    }\n\n    async loadUser() {\n        let user: any = await this.auth.getUser();\n        console.log(user);\n        this.user = user;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ NavbarComponent ],\n    exports: [ NavbarComponent ]\n})\n\nexport class NavbarModule {}\n","import { Component, OnInit } from '@angular/core';\n\ndeclare const $: any;\ndeclare interface RouteInfo {\n    path: string;\n    title: string;\n    icon: string;\n    class: string;\n}\nexport const ROUTES: RouteInfo[] = [\n    { path: '/dashboard', title: 'Dashboard',  icon: 'pe-7s-graph', class: '' },\n    { path: '/cliente/consulta', title: 'Clientes',  icon:'pe-7s-portfolio', class: '' },\n    { path: '/chamado/consulta', title: 'Chamados',  icon:'pe-7s-albums', class: '' },\n    { path: '/atendimento/consulta', title: 'Atendimentos',  icon:'pe-7s-note2', class: '' },\n    { path: '/atendimento/tv', title: 'Atendimentos TV',  icon:'pe-7s-monitor', class: '' },\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html'\n})\n\nexport class SidebarComponent implements OnInit {\n  menuItems: any[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n  }\n  isMobileMenu() {\n      if ($(window).width() > 991) {\n          return false;\n      }\n      return true;\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ SidebarComponent ],\n    exports: [ SidebarComponent ]\n})\n\nexport class SidebarModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  // API_ENDPOINT: 'http://localhost:3000',\n  API_ENDPOINT: 'https://ups-node-api.herokuapp.com',\n  VIA_CEP_API_ENDPOINT: 'https://viacep.com.br/ws'\n};\n","/*!\n\n =========================================================\n * Light Bootstrap Dashboard Angular - v1.6.0\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-angular2\n * Copyright 2016 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}